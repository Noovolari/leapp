name: Leapp Desktop App CD - nightly - approval

on:
  workflow_dispatch:

env:
  CERTIFICATE_APPLICATION_OSX_P12: ${{ secrets.CERTIFICATE_APPLICATION_OSX_P12 }}
  CERTIFICATE_OSX_P12: ${{ secrets.CERTIFICATE_OSX_P12 }}
  DECODE_PASSWORD: ${{ secrets.DECODE_PASSWORD }}
  DISTRIBUTION_ID: ${{ secrets.DISTRIBUTION_ID }}
  GH_TOKEN: ${{ secrets.GH_TOKEN }}
  KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
  S3_BUCKET: s3://noovolari-leapp-website-distribution
  WIN_CERTIFICATE: ${{ secrets.WIN_CERTIFICATE }}
  WIN_CSC_KEY_PASSWORD: ${{ secrets.WIN_CSC_KEY_PASSWORD }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  TEAM_REPOSITORY: ${{ secrets.TEAM_REPOSITORY }}

jobs:
  generate-build-identifier:
    outputs:
      build-identifier: ${{ steps.build-identifier-generator.outputs.BUILD_IDENTIFIER }}
    runs-on: ubuntu-latest
    steps:
      - name: generate build identifier
        id: build-identifier-generator
        run: |
          IDENTIFIER=$(date +%Y%m%d%H%M%S)
          echo "::set-output name=BUILD_IDENTIFIER::$IDENTIFIER"

  build-and-release-core-and-cli:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build and release core (nightly)
        run: |
          cd packages/core

          echo "//registry.npmjs.org/:_authToken=\${NPM_TOKEN}" > .npmrc
          npm install
          npm run nightly

      - name: Build and release CLI (nightly)
        run: |
          cd packages/cli

          echo "//registry.npmjs.org/:_authToken=\${NPM_TOKEN}" > .npmrc
          npm install
          npm run nightly

  build-macos-arm:
    runs-on: macos-latest
    needs: [ build-and-release-core-and-cli, generate-build-identifier ]
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Release draft to S3 (nightly)
        id: release
        run: |
          cd packages/desktop-app
          TAG_VERSION=0.19.0
          BUILD_IDENTIFIER=20230912161922
          PRESIGN_URL=$(aws s3 presign "${{ env.S3_BUCKET }}/nightly/${BUILD_IDENTIFIER}/Leapp-${TAG_VERSION}-arm64.dmg")
          echo "${PRESIGN_URL}" > presign_url.txt
          cat presign_url.txt
          echo "::set-output name=TAG_VERSION::$TAG_VERSION"

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ needs.generate-build-identifier.outputs.build-identifier }}-Leapp-${{ steps.release.outputs.TAG_VERSION }}-arm64.dmg
          path: packages/desktop-app/release/Leapp-${{ steps.release.outputs.TAG_VERSION }}-arm64.dmg
