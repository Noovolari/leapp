name: Leapp Desktop App CD test

on:
  push:
    branches:
      - azure-msal-spike

env:
  S3_BUCKET: s3://noovolari-leapp-website-distribution-test
  WIN_CERTIFICATE: ${{ secrets.WIN_CERTIFICATE }}
  WIN_CSC_KEY_PASSWORD: ${{ secrets.WIN_CSC_KEY_PASSWORD }}
  GH_TOKEN: ${{ secrets.GH_TOKEN }}

jobs:
  build:
    strategy:
      matrix:
        os: [ windows-2022 ]
        node_version: [ 16 ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Prepare GIT
        shell: bash
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node_version }}
      - name: Set pro environment
        shell: bash
        run: npm run set-pro-environment
      - name: Bootstrap
        shell: bash
        run: npm run bootstrap
      - name: ls
        shell: bash
        run: ls -R packages/desktop-app/node_modules/@noovolari/dpapi-addon
      - name: Build Win desktop app
        shell: bash
        run: |
          cd packages/desktop-app
          WIN_CERTIFICATE=windows_sign_certificate.pfx
          echo "Recreate the window certificate from the secure environment variable"
          echo "${{ env.WIN_CERTIFICATE }}" | base64 --decode > $WIN_CERTIFICATE
          npm install
          npm run release-win
          rm -Rf ./release/win-unpacked
          rm -Rf ./release/.cache
          rm -Rf ./release/builder-debug.yml
          rm -Rf ./release/builder-effective-config.yaml
          ls -R release
          rm "./release/Leapp-0.12.2-win.zip"
          powershell "Compress-Archive './release/Leapp Setup 0.12.2.exe' './release/Leapp-0.12.2-win.zip'"
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
      - name: Release draft to S3
        shell: bash
        run: |
          cd packages/desktop-app
          TAG_VERSION=v123.123.123
          TAG_VERSION=${TAG_VERSION:1}
          aws s3 cp ./release/ "${{ env.S3_BUCKET }}/$TAG_VERSION/" --recursive
