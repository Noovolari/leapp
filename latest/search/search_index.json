{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"],"fields":{"title":{"boost":1000.0},"text":{"boost":1.0},"tags":{"boost":1000000.0}}},"docs":[{"location":"","title":"Overview","text":""},{"location":"#overview","title":"Overview","text":""},{"location":"#welcome-to-leapp","title":"Welcome to Leapp","text":"<p>Leapp is a tool for developers to manage, secure, and access the cloud.</p> <p>All data is persisted and encrypted on your workstation. Head to our Security section to know how we guarantee the highest level of security.</p> Leapp Main Window <p>The name Leapp is based on the word leap and is pronounced /l:ip/. We chose this name because the project enables you to be one step away from your cloud environments.</p>"},{"location":"#introducing-leapp-cli","title":"Introducing Leapp CLI","text":"<p>Leapp CLI (Command Line Interface) for Leapp is built on Node.js with Oclif and the leapp core library. </p> <p>You can follow the installation guidelines in order to make it work!</p> <p>It allows you to use Leapp application functionality in your terminal.</p> <p>Leapp CLI is open source on GitHub.</p>"},{"location":"configuration/","title":"Add your first configuration","text":"<p>Now it's time to add your very first configuration. Follow the link to your preferred supported method and start enjoying Leapp.</p>"},{"location":"configuration/#sessions","title":"Sessions","text":""},{"location":"configuration/#aws","title":"AWS","text":"<p>Select the configuration you need from the Access Method dropdown menu:</p> Leapp Iam User <p>Then follow the links below.</p> <ul> <li>Configure an AWS IAM User</li> <li>Configure an AWS IAM Role Federated</li> <li>Configure an AWS IAM Role Chained</li> <li>Configure LocalStack</li> </ul>"},{"location":"configuration/#integrations","title":"Integrations","text":""},{"location":"configuration/#aws-sso","title":"AWS SSO","text":"<ul> <li>Configure AWS SSO</li> </ul>"},{"location":"configuration/#azure-ad","title":"Azure AD","text":"<ul> <li>Configure an Azure Tenant</li> </ul>"},{"location":"edit-session/","title":"Editing a session","text":"<p>Leapp allows the user to edit an existing session excluding those generated from an AWS integration.</p> <p>Info</p> <p>Integration derived Sessions can\u2019t be changed</p> <p>To edit an existing session just right-click on a session in the Leapp list (see below), and select \"edit session\". A new modal will appear, allowing the user to choose which parameters to change.</p> edit session <p>Below are the configuration options for every type of session:</p>"},{"location":"edit-session/#iam-user","title":"Iam User","text":"<ul> <li>Session Alias: the session name can be changed, as a session is identified by a hidden id</li> <li>Named Profile: you can change a named profile and the session, if active, will restart itself</li> <li>AWS Region: you can change the region and the session will restart itself, if active</li> <li>Mfa Device (optional): can be left empty or, if you add a valid device name or AWS ARN, it will prompt a modal for MFA code</li> <li>Access Key ID: Replace your session Access Key ID in the system vault</li> <li>Secret Access Key: Replace your session Secret Access Key in the system vault</li> </ul>"},{"location":"edit-session/#iam-role-chained","title":"IAM Role Chained","text":"<ul> <li>Session Alias: the session name can be changed, as a session is identified by a hidden id</li> <li>Named Profile: you can change a named profile and the session, if active, will restart itself</li> <li>AWS Region: you can change the region and the session will restart itself, if active</li> <li>Role ARN: The role that you'll assume when chaining from an assumer window</li> <li>Role Session Name: (optional), it will be used to identify the chained session</li> <li>Assumer Session: select a session from the list, it will be the Principal assuming the role</li> </ul> <p>Info</p> <p>You can also generate a new IAM Role Chained session from any other AWS session by right-clicking on a session and chosing \"Create Chained Session\"</p>"},{"location":"edit-session/#iam-role-federated","title":"IAM Role Federated","text":"<ul> <li>Session Alias: the session name can be changed, as a session is identified by a hidden id</li> <li>Named Profile: you can change a named profile and the session, if active, will restart itself</li> <li>AWS Region: you can change the region and the session will restart itself, if active</li> <li>Role ARN: Role of the Principal in AWS</li> <li>SAML 2.0 Url: Federated URL needed for authentication to AWS</li> <li>Identity Provider: the identity provider ARN that you have set up on AWS</li> </ul> <p>After modifying all the parameters, a user can test their validity with test credential generation:</p> <p>Clicking this button allows Leapp to do a dry run on your parameters, and if valid, a new set of credentials  will be generated (but not used) and an informative toast will appear to tell you that they can be used successfully.</p>"},{"location":"edit-session/#how-we-handle-secrets-when-editing-a-session","title":"How we handle Secrets when Editing a Session","text":"<p>No secrets will be saved in plain text on your machine.  Leapp saves secrets by replacing values in the system keychain,  using a combination of an informative name plus the session hidden id.</p> <p>This way we reduce potential blast radius of an attacker tampering your machine.</p> <p>When editing a session, Leapp will hide your secrets and you are also unable to copy/paste them from the App.</p>"},{"location":"integrations/","title":"Integrations","text":"<p>This section provides an overview of Leapp's integrations, useful to extend the functionality of Leapp to 3rd party services.</p> <p>Integrations help manage access and identities on your service of choice while using Leapp during your daily activities. They are automatically mapped into Sessions.</p>"},{"location":"integrations/#actions","title":"Actions","text":"<p>Integrations have four main actions available: Create, Delete, Sync, and Logout.</p> Action Description <code>CREATE</code> Configure a new Integration with the data needed to start the authentication flow. Required to Sync and map the service response into Sessions. <code>DELETE</code> Remove an existing Integration. Removes all the associated Sessions as well and wipes everything related to the Integration from the system (tokens, cache, etc.) <code>SYNC</code> Start the authentication flow to log into the Integration Provider. Leapp will automatically retrieve all the related data and map the response into Sessions. Any change in your service of choice requires a manual Sync to reflect the current status. <code>LOGOUT</code> Disable the Integration. Removes all the Sessions but keeps the Integration data. Running a Sync will restore all the Sessions tied to it."},{"location":"integrations/#supported-services","title":"Supported Services","text":"Service Supported AWS SSO Okta Coming Soon OneLogin Coming Soon AzureAD"},{"location":"sessions/","title":"Sessions","text":""},{"location":"sessions/#sessions","title":"Sessions","text":"<p>A Session contains all the relevant information to let the dev connect to a cloud provider. Three standard actions should be implemented for each session: start, stop, and rotate.</p>"},{"location":"sessions/#actions","title":"Actions","text":"Method Description <code>START</code>     \u00a0Make the temporary credentials available to the provider chain <code>STOP</code>     \u00a0Removes the temporary credentials from the provider chain <code>ROTATE</code>     \u00a0Generate new temporary credentials, and substitute the previous ones in the provider chain <p>The process of setting up Leapp Sessions is managed either manually, for each access method, or through integrations with third-party tools. Leapp stores all the Sessions available to the users locally, inside a configuration file called Workspace.</p>"},{"location":"workspaces/","title":"Workspaces","text":""},{"location":"workspaces/#workspaces","title":"Workspaces","text":"<p>A Workspace is a global configuration that contains all the relevant information about your Leapp setup (sessions, integrations, app preferences, etc.).</p> <p>There are two types of workspace: Local and Remote.</p>"},{"location":"workspaces/#local","title":"Local","text":"<p>A Local workspace is the default workspace that comes with your Leapp installation. It's a private configuration that contains your personal preferences and all sessions and integrations that you created yourself. </p> <p>A local workspace is associated to a single machine and if you need to migrate your configuration to another one you will have to do it manually. </p> <p>Alternatively, you can use Remote workspaces.</p>"},{"location":"workspaces/#remote","title":"Remote","text":"<p>A Remote workspace is a Leapp Team configuration set created remotely by a Leapp Team manager. </p> <p>When you sync a remote workspace, you will receive sessions and integrations automatically, without having to configure them yourself. </p> <p>A remote workspace is persisted online by using Zero-Knowledge encryption.</p> <p>You will have access to the same configurations instantly on any machine, by logging in to your Leapp Team account after having been invited by your Leapp Team manager.</p> <p>Info</p> <p>Both your local and remote workspaces are saved on your machine as encrypted files inside your /.Leapp directory.</p>"},{"location":"workspaces/#actions","title":"Actions","text":"<p>The actions below only applies to Remote workspaces.</p> Action Description <code>Sign-in</code>  \u00a0Connect to a Remote workspace. This action will not switch your Local workspace <code>Switch</code>  \u00a0Switch to the selected workspace by clicking on its name in the workspace menu <code>Lock</code>  \u00a0Switch back to the Local workspace disabling all the Remote ones <code>Sign-out</code>  \u00a0Sign-out from a Remote workspace removing all your login details <p>Info</p> <p>The Lock action also removes the encrypted files associated to your remote workspaces.</p>"},{"location":"built-in-features/aws-ec2-connect/","title":"Configure AWS EC2 Connect","text":""},{"location":"built-in-features/aws-ec2-connect/#what-is-aws-ec2-connect","title":"What is AWS EC2 Connect","text":"<p>Amazon EC2 Instance Connect is a simple and secure way to connect to your instances using Secure Shell (SSH).  With EC2 Instance Connect, you can control SSH access to your instances using AWS Identity and Access Management (IAM) policies as well as audit connection requests with AWS CloudTrail events.</p>"},{"location":"built-in-features/aws-ec2-connect/#how-to-configure-aws-ec2-connect-in-leapp","title":"How To configure AWS EC2 Connect in Leapp","text":"<p>Warning</p> <p>If your Leapp Desktop App is warning you that you're missing the AWS Session Manager Plugin, please install it following this official guide.</p> <p>You can directly connect to an AWS EC2 instance from Leapp through AWS System Manager (AWS SSM).</p> <p>Info</p> <p>To setup SSM follow this SSM guide on AWS guide.</p> example image from AWS <p>To correctly connect follow these steps:</p> <ol> <li>Right-click on a suitable AWS session to open the contextual menu.</li> <li>Click on View SSM sessions.</li> <li>Select the AWS region in which your instance is located.</li> <li>Wait for Leapp to load your instances.</li> <li>Select the instance and click connect.</li> <li>Wait for the terminal to open.</li> <li>Focus the terminal window and write <code>/bin/bash</code>; press  Enter  and you'll be inside the terminal of your instance.</li> </ol>"},{"location":"built-in-features/aws-ec2-connect/#video-tutorial","title":"Video tutorial","text":"<p>Warning</p> <p>If the user is not granted the right permissions, the operation will fail and Leapp will throw an error message.</p>"},{"location":"built-in-features/aws-named-profiles/","title":"Configure Named Profiles","text":""},{"location":"built-in-features/aws-named-profiles/#what-is-a-named-profile","title":"What is a Named Profile","text":"<p>Named Profiles are used by AWS to maintain more than one set of active credentials for you to use with AWS-CLI, SDK, or other third-party tools. Named profiles are stored in ~/.aws/credentials file in the ini file format.</p> <p>Named Profiles have a default profile which is the one you get from aws configure command.</p> <p>With Leapp you can group and activate more than one credential set at a time through Named Profiles.</p>"},{"location":"built-in-features/aws-named-profiles/#how-to-configure-a-named-profile-in-leapp","title":"How to configure a Named Profile in Leapp","text":"<p>Named Profiles can be created in 3 ways:</p> Option PanelWhen creating a new SessionEdit Profile in Contextual Menu <p>Click on the gear icon   and select the Profiles tab. Insert the name of the new Named Profile in the input form, then click on the plus icon.</p> <p>When creating a new session, the user will have the option to choose a Named Profile or add a new one.</p> <p>Right-click on a session and select Change then Named Profile: an option to select or add a new Named Profile will be available.</p> <p> </p> <p>The new name is directly added to the Named Profile list and can then be used for other sessions too.</p> <p>Info</p> <p>AWS SSO sessions will have the Named Profile <code>default</code> when obtained via Login or Sync. To change the Named Profile associated to a session you have to use the \"Change Profile\" option in the session list.</p>"},{"location":"built-in-features/aws-named-profiles/#named-profile-list","title":"Named Profile List","text":"<p>Named profiles can be managed from the Option menu.</p> <p>In the Option menu, under the Profiles tab, you can add or edit a new Named Profile, and you can also remove unwanted ones. When removing a Named Profile, Leapp will warn you about which sessions are using that profile, and those sessions will be reverted to the default Named Profile.</p> <p>The input form can be used to add or edit a Named Profile: if it's empty, you can use it to add a new named profile. When selecting the  button, you will be able to edit the name of the Named Profile from within the input form.</p> <p>Warning</p> <p>Remember that when you change the profile of a session, the session will be immediately put in stop mode. That's because Leapp would have to change the credential file, so you will need to restart the session again.</p>"},{"location":"built-in-features/general-options/","title":"General Options","text":"<p>Once you've opened the Leapp option menu - which can be accessed by clicking the top right gear icon - you can edit the following settings in the General tab</p>"},{"location":"built-in-features/general-options/#default-regions","title":"Default Regions","text":"<p>This option allows you to set the default AWS or Azure region/location for every new session. </p> <p>Each time you create a new session, this will be the default region assigned to it. </p> <p>You can still change it if you need a different one, by selecting a different region while creating the session or by changing the region once a session is created.</p>"},{"location":"built-in-features/general-options/#terminal-selection","title":"Terminal Selection","text":"<p>This option is used to select the terminal in which to open an SSM session. </p> <p>Info</p> <p>This setting is currently only available on MacOS. If you want to contribute and add a new terminal for a specific OS, please refer to the contributing guide</p>"},{"location":"built-in-features/general-options/#color-theme","title":"Color Theme","text":"<p>Leapp now comes with a slick new Dark Theme! </p> <p>With this option, you can switch between light and dark theme, or use your system default.</p>"},{"location":"built-in-features/general-options/#default-webconsole-duration","title":"Default Webconsole Duration","text":"<p>This option is used to set the default Webconsole session duration in hours.</p> <p>Info</p> <p>The minimum session duration is 1 hour, and can be set to a maximum of 12 hours. Set session duration</p>"},{"location":"built-in-features/multi-console/","title":"Configure Multi Console","text":""},{"location":"built-in-features/multi-console/#what-is-multi-console","title":"What is Multi Console","text":"<p>The Leapp Multi-Console Browser Extension allows you to open multiple instances of  the AWS Web Console in the same browser window and helps you in managing them.</p> Get it on Firefox \u21e9 Get it on Chrome \u21e9"},{"location":"built-in-features/multi-console/#list-of-supported-browsers","title":"List of Supported Browsers","text":"Browser Supported Firefox Chrome Edge Brave Safari"},{"location":"built-in-features/multi-console/#how-to-configure-multi-console-in-leapp","title":"How to Configure Multi Console in Leapp","text":""},{"location":"built-in-features/multi-console/#install-the-extension","title":"Install the Extension","text":""},{"location":"built-in-features/multi-console/#firefox","title":"Firefox","text":"<p>You can get the extension on the official Mozilla Addons Store and install it from there:</p> <ol> <li>Visit the page by clicking the button below</li> <li>Then Click on Add to Firefox</li> </ol> <p>Get it on Firefox \u21e9</p>"},{"location":"built-in-features/multi-console/#chrome-edge-and-other-chromium-based-browsers","title":"Chrome, Edge and other Chromium based browsers","text":"<p>Info</p> <p>Because the extension at the moment relies on Manifest V2, we are unable to upload the extension on the official stores.  For more info see Chrome extension documentation</p> <p>The extension can only be installed manually. To do so, follow these instructions:</p> <ol> <li>Download the zip archive by clicking on the button below</li> <li>Unzip the file</li> <li>Open your browser and navigate to <code>about://extensions</code></li> <li>Enable Developer mode in the top right corner</li> <li>Then click on Load unpacked in the top left corner</li> <li>Finally, Select the folder extracted previously</li> </ol> <p>Get it on Chrome/Others \u21e9</p>"},{"location":"built-in-features/multi-console/#uninstall-the-extension","title":"Uninstall the Extension","text":""},{"location":"built-in-features/multi-console/#firefox_1","title":"Firefox","text":"<ol> <li>Visit <code>about:addons</code></li> <li>Select Leapp Browser Extension and click on the 3 dots</li> <li>Click on Remove</li> </ol>"},{"location":"built-in-features/multi-console/#chrome-edge-and-other-chromium-based-browsers_1","title":"Chrome, Edge and other Chromium based browsers","text":"<ol> <li>Visit <code>about://extensions</code></li> <li>Search for Leapp Browser Extension and click on Remove</li> <li>See warning section below</li> </ol> <p>Warning</p> <p>If you are using the Chrome version and you uninstalled or disabled the extension, you have to manually clear cookies for the AWS Console. To do so, when accessing the login page of the AWS Console, on the left of the address bar, click the lock icon and select \"Cookies\".  Then, remove all cookies by clicking \"Remove\" until the cookie list is empty and finally click on Done  </p>"},{"location":"built-in-features/multi-console/#how-to-use-it","title":"How to use it","text":"<p>Once you've installed the extension on your browser, you need to enable the Multi-Console Extension on the Leapp Desktop App in order to use it.</p> <p>Click on the top-right cog icon to access the settings, click on the Multi-Console tab and then click Enable Multi-Console Extension.</p> enable option <p>From the contextual menu of a session (accessed by right-clicking on it), simply select Open Web Console. </p> <p>Info</p> <p>If any communication error occurs, your browser is not open or you don't have the extension installed/enabled on it, the web console will be opened in your default browser without using the extension (and will be limited to a single session).</p> <p>By clicking on the Leapp Multi-Console Extension icon in your browser, a list of all currently active sessions will be shown. </p> <p>This list contains information obtained from Leapp about the session, including Session Name, Session Role and Session Region.</p> leapp browser ui <p>In the extension interface, click on a row to select and focus the tab in which you opened the related AWS Console, so you can easily navigate among many AWS Consoles at the same time.</p>"},{"location":"built-in-features/opening-web-console/","title":"Configure Open Web Console","text":""},{"location":"built-in-features/opening-web-console/#what-is-open-web-console","title":"What is Open Web Console","text":"<p>Open Web Console is a Leapp feature that allows you to open the AWS Web Console of a session that you've created in Leapp. </p>"},{"location":"built-in-features/opening-web-console/#how-to-configure-open-web-console-in-leapp","title":"How to Configure Open Web Console in Leapp","text":"<p>You can open the AWS Web Console directly from Leapp, without having to log in, input your credentials, or select the role to assume.</p> <p>To do that just right-click or select the session you want to open in the web console, and click on the  icon either in the context-menu or in the bottom-bar below.</p> <p>Alternatively, you can Command + left-click on a session (or Control + left-click for Windows/Linux ) to open the web console.</p> <p>Leapp will open your default browser with the Region and the Role already prepared for you in the account you've selected.</p> <p>note: to use this feature correctly, remember to logout from any web console already opened in the browser.</p> <p>note: the feature currently is available for IAM Role Federated Sessions, Single Sign-On Sessions, and IAM Role Chained Sessions.</p>"},{"location":"cli/","title":"Index","text":"<p>Leapp's Command Line Interface.</p> <p>Warning</p> <p>Leapp CLI works only if the Desktop App is installed and running. Note that version &gt;= v0.11.0 of the Desktop App is required. Check the installation guide to install the Desktop App.</p> <pre><code>$ npm install -g @noovolari/leapp-cli\n$ leapp COMMAND\nrunning command...\n$ leapp (--version)\n@noovolari/leapp-cli/0.1.46 darwin-x64 node-v16.14.0\n$ leapp --help [COMMAND]\nUSAGE\n  $ leapp COMMAND\n...\n</code></pre>"},{"location":"cli/#command-topics","title":"Command Topics","text":"<ul> <li><code>leapp help</code> - Display help for leapp.</li> <li><code>leapp idp-url</code> - SAML 2.0 Identity providers URL management</li> <li><code>leapp integration</code> - Leapp Integrations management</li> <li><code>leapp profile</code> - Leapp AWS Multi-profile management</li> <li><code>leapp region</code> - Leapp regions management</li> <li><code>leapp session</code> - Sessions management</li> <li><code>leapp set-workspace</code> - Set the current Leapp workspace</li> <li><code>leapp team</code> - Login to your Team account</li> <li><code>leapp version</code> - Displays the Cli and Core versions</li> <li><code>leapp workspace</code> - Show the current workspace</li> </ul>"},{"location":"cli/scopes/help/","title":"Help","text":""},{"location":"cli/scopes/help/#leapp-help","title":"<code>leapp help</code>","text":"<p>Display help for leapp.</p> <ul> <li><code>leapp help [COMMANDS]</code></li> </ul>"},{"location":"cli/scopes/help/#leapp-help-commands","title":"<code>leapp help [COMMANDS]</code>","text":"<p>Display help for leapp.</p> <pre><code>USAGE\n  $ leapp help [COMMANDS] [-n]\n\nARGUMENTS\n  COMMANDS  Command to show help for.\n\nFLAGS\n  -n, --nested-commands  Include all nested commands in the output.\n\nDESCRIPTION\n  Display help for leapp.\n</code></pre> <p>See code: @oclif/plugin-help</p>"},{"location":"cli/scopes/idp-url/","title":"Idp Url","text":""},{"location":"cli/scopes/idp-url/#leapp-idp-url","title":"<code>leapp idp-url</code>","text":"<p>SAML 2.0 Identity providers URL management</p> <ul> <li><code>leapp idp-url create</code></li> <li><code>leapp idp-url delete</code></li> <li><code>leapp idp-url edit</code></li> <li><code>leapp idp-url list</code></li> </ul>"},{"location":"cli/scopes/idp-url/#leapp-idp-url-create","title":"<code>leapp idp-url create</code>","text":"<p>Create a new identity provider URL</p> <pre><code>USAGE\n  $ leapp idp-url create [--idpUrl &lt;value&gt;]\n\nFLAGS\n  --idpUrl=&lt;value&gt;  the idp url address we want to create\n\nDESCRIPTION\n  Create a new identity provider URL\n\nEXAMPLES\n  $leapp idp-url create\n\n  $leapp idp-url create --idpUrl ADDRESS\n</code></pre>"},{"location":"cli/scopes/idp-url/#leapp-idp-url-delete","title":"<code>leapp idp-url delete</code>","text":"<p>Delete an identity provider URL</p> <pre><code>USAGE\n  $ leapp idp-url delete [--idpUrlId &lt;value&gt;] [-f]\n\nFLAGS\n  -f, --force         force a command without asking for confirmation (-f, --force)\n  --idpUrlId=&lt;value&gt;  the idp url id that we want to pass to the function like the delete one\n\nDESCRIPTION\n  Delete an identity provider URL\n\nEXAMPLES\n  $leapp idp-url delete\n\n  $leapp idp-url delete --idpUrlId ID\n\n  $leapp idp-url delete --idpUrlId ID [--force, -f]\n</code></pre>"},{"location":"cli/scopes/idp-url/#leapp-idp-url-edit","title":"<code>leapp idp-url edit</code>","text":"<p>Edit an identity provider URL</p> <pre><code>USAGE\n  $ leapp idp-url edit [--idpUrlId &lt;value&gt;] [--idpUrl &lt;value&gt;]\n\nFLAGS\n  --idpUrl=&lt;value&gt;    the idp url address we want to create\n  --idpUrlId=&lt;value&gt;  the idp url id that we want to pass to the function like the delete one\n\nDESCRIPTION\n  Edit an identity provider URL\n\nEXAMPLES\n  $leapp idp-url edit\n\n  $leapp idp-url edit --idpUrlId ID --idpUrl ADDRESS\n</code></pre>"},{"location":"cli/scopes/idp-url/#leapp-idp-url-list","title":"<code>leapp idp-url list</code>","text":"<p>Show identity providers list</p> <pre><code>USAGE\n  $ leapp idp-url list [--columns &lt;value&gt; | -x] [--sort &lt;value&gt;] [--filter &lt;value&gt;] [--output csv|json|yaml |  |\n    [--csv | --no-truncate]] [--no-header | ]\n\nFLAGS\n  -x, --extended     show extra columns\n  --columns=&lt;value&gt;  only show provided columns (comma-separated)\n  --csv              output is csv format [alias: --output=csv]\n  --filter=&lt;value&gt;   filter property by partial string matching, ex: name=foo\n  --no-header        hide table header from output\n  --no-truncate      do not truncate output to fit screen\n  --output=&lt;option&gt;  output in a more machine friendly format\n                     &lt;options: csv|json|yaml&gt;\n  --sort=&lt;value&gt;     property to sort by (prepend '-' for descending)\n\nDESCRIPTION\n  Show identity providers list\n\nEXAMPLES\n  $leapp idp-url list\n</code></pre>"},{"location":"cli/scopes/integration/","title":"Integration","text":""},{"location":"cli/scopes/integration/#leapp-integration","title":"<code>leapp integration</code>","text":"<p>Leapp Integrations management</p> <ul> <li><code>leapp integration create</code></li> <li><code>leapp integration delete</code></li> <li><code>leapp integration list</code></li> <li><code>leapp integration login</code></li> <li><code>leapp integration logout</code></li> <li><code>leapp integration sync</code></li> </ul>"},{"location":"cli/scopes/integration/#leapp-integration-create","title":"<code>leapp integration create</code>","text":"<p>Create a new integration</p> <pre><code>USAGE\n  $ leapp integration create [--integrationAlias &lt;value&gt;] [--integrationPortalUrl &lt;value&gt;] [--integrationRegion &lt;value&gt;]\n    [--integrationType AWS-SSO|AZURE] [--integrationTenantId &lt;value&gt;] [--integrationLocation &lt;value&gt;]\n\nFLAGS\n  --integrationAlias=&lt;value&gt;      alias that identifies an integration\n  --integrationLocation=&lt;value&gt;   Location of an Azure Integration\n  --integrationPortalUrl=&lt;value&gt;  url that identifies the integration portal where you authenticate\n  --integrationRegion=&lt;value&gt;     an AWS valid region code for the integration\n  --integrationTenantId=&lt;value&gt;   Tenant ID of an Azure Integration\n  --integrationType=&lt;option&gt;      Identify the type of your integration. Valid types are [AWS-SSO, AZURE]\n                                  &lt;options: AWS-SSO|AZURE&gt;\n\nDESCRIPTION\n  Create a new integration\n\nEXAMPLES\n  $leapp integration create\n\n  $leapp integration create --integrationType AWS-SSO --integrationAlias ALIAS --integrationPortalUrl URL --integrationRegion REGION\n\n  $leapp integration create --integrationType AZURE --integrationAlias ALIAS --integrationTenantId TENANT --integrationLocation LOCATION\n</code></pre>"},{"location":"cli/scopes/integration/#leapp-integration-delete","title":"<code>leapp integration delete</code>","text":"<p>Delete an integration</p> <pre><code>USAGE\n  $ leapp integration delete [--integrationId &lt;value&gt;]\n\nFLAGS\n  --integrationId=&lt;value&gt;  the Integration Id used to identify the integration inside Leapp\n\nDESCRIPTION\n  Delete an integration\n\nEXAMPLES\n  $leapp integration delete\n\n  $leapp integration delete --integrationId ID\n</code></pre>"},{"location":"cli/scopes/integration/#leapp-integration-list","title":"<code>leapp integration list</code>","text":"<p>Show integrations list</p> <pre><code>USAGE\n  $ leapp integration list [--columns &lt;value&gt; | -x] [--sort &lt;value&gt;] [--filter &lt;value&gt;] [--output csv|json|yaml |  |\n    [--csv | --no-truncate]] [--no-header | ]\n\nFLAGS\n  -x, --extended     show extra columns\n  --columns=&lt;value&gt;  only show provided columns (comma-separated)\n  --csv              output is csv format [alias: --output=csv]\n  --filter=&lt;value&gt;   filter property by partial string matching, ex: name=foo\n  --no-header        hide table header from output\n  --no-truncate      do not truncate output to fit screen\n  --output=&lt;option&gt;  output in a more machine friendly format\n                     &lt;options: csv|json|yaml&gt;\n  --sort=&lt;value&gt;     property to sort by (prepend '-' for descending)\n\nDESCRIPTION\n  Show integrations list\n\nEXAMPLES\n  $leapp integration list\n</code></pre>"},{"location":"cli/scopes/integration/#leapp-integration-login","title":"<code>leapp integration login</code>","text":"<p>Login to synchronize integration sessions</p> <pre><code>USAGE\n  $ leapp integration login [--integrationId &lt;value&gt;]\n\nFLAGS\n  --integrationId=&lt;value&gt;  the Integration Id used to identify the integration inside Leapp\n\nDESCRIPTION\n  Login to synchronize integration sessions\n\nEXAMPLES\n  $leapp integration login\n\n  $leapp integration login --integrationId ID\n</code></pre>"},{"location":"cli/scopes/integration/#leapp-integration-logout","title":"<code>leapp integration logout</code>","text":"<p>Logout from an integration</p> <pre><code>USAGE\n  $ leapp integration logout [--integrationId &lt;value&gt;]\n\nFLAGS\n  --integrationId=&lt;value&gt;  the Integration Id used to identify the integration inside Leapp\n\nDESCRIPTION\n  Logout from an integration\n\nEXAMPLES\n  $leapp integration logout\n\n  $leapp integration logout --integrationId ID\n</code></pre>"},{"location":"cli/scopes/integration/#leapp-integration-sync","title":"<code>leapp integration sync</code>","text":"<p>Synchronize integration sessions</p> <pre><code>USAGE\n  $ leapp integration sync [--integrationId &lt;value&gt;]\n\nFLAGS\n  --integrationId=&lt;value&gt;  the Integration Id used to identify the integration inside Leapp\n\nDESCRIPTION\n  Synchronize integration sessions\n\nEXAMPLES\n  $leapp integration sync\n\n  $leapp integration sync --integrationId ID\n</code></pre>"},{"location":"cli/scopes/profile/","title":"Profile","text":""},{"location":"cli/scopes/profile/#leapp-profile","title":"<code>leapp profile</code>","text":"<p>Leapp AWS Multi-profile management</p> <ul> <li><code>leapp profile create</code></li> <li><code>leapp profile delete</code></li> <li><code>leapp profile edit</code></li> <li><code>leapp profile list</code></li> </ul>"},{"location":"cli/scopes/profile/#leapp-profile-create","title":"<code>leapp profile create</code>","text":"<p>Create a new AWS named profile</p> <pre><code>USAGE\n  $ leapp profile create [--profileName &lt;value&gt;]\n\nFLAGS\n  --profileName=&lt;value&gt;  an AWS named profile Alias used to identify the profile in both config and credential file\n\nDESCRIPTION\n  Create a new AWS named profile\n\nEXAMPLES\n  $leapp profile create\n\n  $leapp profile create --profileName PROFILENAME\n</code></pre>"},{"location":"cli/scopes/profile/#leapp-profile-delete","title":"<code>leapp profile delete</code>","text":"<p>Delete an AWS named profile</p> <pre><code>USAGE\n  $ leapp profile delete [--profileId &lt;value&gt;] [-f]\n\nFLAGS\n  -f, --force          force a command without asking for confirmation (-f, --force)\n  --profileId=&lt;value&gt;  an AWS named profile ID in Leapp\n\nDESCRIPTION\n  Delete an AWS named profile\n\nEXAMPLES\n  $leapp profile delete\n\n  $leapp profile delete --profileId PROFILEID\n\n  $leapp profile delete --profileId PROFILEID [--force, -f]\n</code></pre>"},{"location":"cli/scopes/profile/#leapp-profile-edit","title":"<code>leapp profile edit</code>","text":"<p>Rename an AWS named profile</p> <pre><code>USAGE\n  $ leapp profile edit [--profileId &lt;value&gt;] [--profileName &lt;value&gt;]\n\nFLAGS\n  --profileId=&lt;value&gt;    an AWS named profile ID in Leapp\n  --profileName=&lt;value&gt;  an AWS named profile Alias used to identify the profile in both config and credential file\n\nDESCRIPTION\n  Rename an AWS named profile\n\nEXAMPLES\n  $leapp profile edit\n\n  $leapp profile edit --profileId ID --profileName PROFILENAME\n</code></pre>"},{"location":"cli/scopes/profile/#leapp-profile-list","title":"<code>leapp profile list</code>","text":"<p>Show profile list</p> <pre><code>USAGE\n  $ leapp profile list [--columns &lt;value&gt; | -x] [--sort &lt;value&gt;] [--filter &lt;value&gt;] [--output csv|json|yaml |  |\n    [--csv | --no-truncate]] [--no-header | ]\n\nFLAGS\n  -x, --extended     show extra columns\n  --columns=&lt;value&gt;  only show provided columns (comma-separated)\n  --csv              output is csv format [alias: --output=csv]\n  --filter=&lt;value&gt;   filter property by partial string matching, ex: name=foo\n  --no-header        hide table header from output\n  --no-truncate      do not truncate output to fit screen\n  --output=&lt;option&gt;  output in a more machine friendly format\n                     &lt;options: csv|json|yaml&gt;\n  --sort=&lt;value&gt;     property to sort by (prepend '-' for descending)\n\nDESCRIPTION\n  Show profile list\n\nEXAMPLES\n  $leapp profile list\n</code></pre>"},{"location":"cli/scopes/region/","title":"Region","text":""},{"location":"cli/scopes/region/#leapp-region","title":"<code>leapp region</code>","text":"<p>Leapp regions management</p> <ul> <li><code>leapp region get-default</code></li> <li><code>leapp region set-default</code></li> </ul>"},{"location":"cli/scopes/region/#leapp-region-get-default","title":"<code>leapp region get-default</code>","text":"<p>Displays the default region</p> <pre><code>USAGE\n  $ leapp region get-default\n\nDESCRIPTION\n  Displays the default region\n\nEXAMPLES\n  $leapp region get-default\n</code></pre>"},{"location":"cli/scopes/region/#leapp-region-set-default","title":"<code>leapp region set-default</code>","text":"<p>Change the default region</p> <pre><code>USAGE\n  $ leapp region set-default [--region &lt;value&gt;]\n\nFLAGS\n  --region=&lt;value&gt;  Session Region for AWS sessions in Leapp\n\nDESCRIPTION\n  Change the default region\n\nEXAMPLES\n  $leapp region set-default\n\n  $leapp region set-default --region AWSREGION\n</code></pre>"},{"location":"cli/scopes/session/","title":"Session","text":""},{"location":"cli/scopes/session/#leapp-session","title":"<code>leapp session</code>","text":"<p>Sessions management</p> <ul> <li><code>leapp session add</code></li> <li><code>leapp session change-profile</code></li> <li><code>leapp session change-region</code></li> <li><code>leapp session current</code></li> <li><code>leapp session delete</code></li> <li><code>leapp session generate SESSIONID</code></li> <li><code>leapp session get-id</code></li> <li><code>leapp session list</code></li> <li><code>leapp session open-web-console</code></li> <li><code>leapp session run-aws-credential-plugin</code></li> <li><code>leapp session start [SESSIONNAME]</code></li> <li><code>leapp session start-ssm-session</code></li> <li><code>leapp session stop [SESSIONNAME]</code></li> </ul>"},{"location":"cli/scopes/session/#leapp-session-add","title":"<code>leapp session add</code>","text":"<p>Add a new session</p> <pre><code>USAGE\n  $ leapp session add [--providerType aws] [--accessKey &lt;value&gt;] [--idpArn &lt;value&gt;] [--idpUrl &lt;value&gt;]\n    [--mfaDevice &lt;value&gt;] [--sessionName &lt;value&gt;] [--parentSessionId &lt;value&gt;] [--profileId &lt;value&gt;] [--region &lt;value&gt;]\n    [--roleArn &lt;value&gt;] [--roleSessionName &lt;value&gt;] [--secretKey &lt;value&gt;] [--sessionType\n    awsIamRoleFederated|awsIamUser|awsIamRoleChained]\n\nFLAGS\n  --accessKey=&lt;value&gt;        AWS Access Key ID of the IAM User\n  --idpArn=&lt;value&gt;           AWS IAM Federated Role IdP Arn value, obtain it from your AWS Account\n  --idpUrl=&lt;value&gt;           the idp url address we want to create\n  --mfaDevice=&lt;value&gt;        MFA Device Arn retrieved from your AWS Account\n  --parentSessionId=&lt;value&gt;  For AWS IAM Role Chained is the session Id of the session that will assume the chained\n                             role. Retrieve it using $leapp session list -x\n  --profileId=&lt;value&gt;        an AWS named profile ID in Leapp\n  --providerType=&lt;option&gt;    Identify the provider for your sessions. Valid types are [aws]\n                             &lt;options: aws&gt;\n  --region=&lt;value&gt;           Session Region for AWS sessions in Leapp\n  --roleArn=&lt;value&gt;          AWS IAM Federated Role Arn value, obtain it from your AWS Account\n  --roleSessionName=&lt;value&gt;  Optional Alias for the Assumed Role Session name\n  --secretKey=&lt;value&gt;        AWS Secret Access Key of the IAM User\n  --sessionName=&lt;value&gt;      Session Alias to identify the session in Leapp\n  --sessionType=&lt;option&gt;     Identify the AWS session type. Valid types are [awsIamRoleFederated, awsIamUser,\n                             awsIamRoleChained]\n                             &lt;options: awsIamRoleFederated|awsIamUser|awsIamRoleChained&gt;\n\nDESCRIPTION\n  Add a new session\n\nEXAMPLES\n  $leapp session add\n\n  $leapp session add --providerType [aws] --sessionType [awsIamRoleFederated, awsIamRoleChained, awsIamUser] --region [AWSREGION] --sessionName NAME ...[combination of flags relative to the session]\n\n  $leapp session add --providerType aws --sessionType awsIamRoleFederated --sessionName NAME --region AWSREGION --idpArn IDPARN --idpUrl IDPURL --profileId PROFILEID --roleArn ROLEARN\n\n  $leapp session add --providerType aws --sessionType awsIamRoleChained --sessionName NAME --region AWSREGION --profileId PROFILEID --roleArn ROLEARN --parentSessionId ID (--roleSessionName ROLESESSIONNAME)\n\n  $leapp session add --providerType aws --sessionType awsIamUser --sessionName NAME --region AWSREGION --profileId PROFILEID --accessKey ACCESSKEY --secretKey SECRETKEY (--mfaDevice MFADEVICEARN)\n</code></pre>"},{"location":"cli/scopes/session/#leapp-session-change-profile","title":"<code>leapp session change-profile</code>","text":"<p>Change a session named-profile</p> <pre><code>USAGE\n  $ leapp session change-profile [--sessionId &lt;value&gt;] [--profileId &lt;value&gt;]\n\nFLAGS\n  --profileId=&lt;value&gt;  an AWS named profile ID in Leapp\n  --sessionId=&lt;value&gt;  Session Id to identify the session in Leapp, recover it with $leapp session list -x\n\nDESCRIPTION\n  Change a session named-profile\n\nEXAMPLES\n  $leapp session change-profile\n\n  $leapp session change-profile --profileId PROFILEID --sessionId SESSIONID\n</code></pre>"},{"location":"cli/scopes/session/#leapp-session-change-region","title":"<code>leapp session change-region</code>","text":"<p>Change a session region</p> <pre><code>USAGE\n  $ leapp session change-region [--sessionId &lt;value&gt;] [--region &lt;value&gt;]\n\nFLAGS\n  --region=&lt;value&gt;     Session Region for AWS sessions in Leapp\n  --sessionId=&lt;value&gt;  Session Id to identify the session in Leapp, recover it with $leapp session list -x\n\nDESCRIPTION\n  Change a session region\n\nEXAMPLES\n  $leapp session change-region\n\n  $leapp session change-region --sessionId SESSIONID --region REGION\n</code></pre>"},{"location":"cli/scopes/session/#leapp-session-current","title":"<code>leapp session current</code>","text":"<p>Provides info about the current active session for a selected profile (if no profile is provided, it uses the profile default)</p> <pre><code>USAGE\n  $ leapp session current [-i] [-p &lt;value&gt;] [-r aws|azure] [-f &lt;value&gt;]\n\nFLAGS\n  -f, --format=&lt;value&gt;     allows formatting data to show\n                           - aws -&gt; id alias, accountNumber, roleArn\n                           - azure -&gt; id tenantId, subscriptionId\n  -i, --inline\n  -p, --profile=&lt;value&gt;    [default: default] aws named profile of which gets info\n  -r, --provider=&lt;option&gt;  filters sessions by the cloud provider service\n                           &lt;options: aws|azure&gt;\n\nDESCRIPTION\n  Provides info about the current active session for a selected profile (if no profile is provided, it uses the profile\n  default)\n\nEXAMPLES\n  $leapp session current --format \"alias accountNumber\" --inline --provider aws\n</code></pre>"},{"location":"cli/scopes/session/#leapp-session-delete","title":"<code>leapp session delete</code>","text":"<p>Delete a session</p> <pre><code>USAGE\n  $ leapp session delete [--sessionId &lt;value&gt;] [-f]\n\nFLAGS\n  -f, --force          force a command without asking for confirmation (-f, --force)\n  --sessionId=&lt;value&gt;  Session Id to identify the session in Leapp, recover it with $leapp session list -x\n\nDESCRIPTION\n  Delete a session\n\nEXAMPLES\n  $leapp session delete\n\n  $leapp session delete --sessionId SESSIONID\n\n  $leapp session delete --sessionId SESSIONID [--force, -f]\n</code></pre>"},{"location":"cli/scopes/session/#leapp-session-generate-sessionid","title":"<code>leapp session generate SESSIONID</code>","text":"<p>Generate STS temporary credentials for the given AWS session id</p> <pre><code>USAGE\n  $ leapp session generate SESSIONID\n\nARGUMENTS\n  SESSIONID  id of the session\n\nDESCRIPTION\n  Generate STS temporary credentials for the given AWS session id\n\nEXAMPLES\n  $leapp session generate 0a1b2c3d-4e5f-6a7b-8c9d-0e1f2a3b4c5d\n</code></pre>"},{"location":"cli/scopes/session/#leapp-session-get-id","title":"<code>leapp session get-id</code>","text":"<p>Get session id</p> <pre><code>USAGE\n  $ leapp session get-id\n\nDESCRIPTION\n  Get session id\n\nEXAMPLES\n  $leapp session get-id\n</code></pre>"},{"location":"cli/scopes/session/#leapp-session-list","title":"<code>leapp session list</code>","text":"<p>Show sessions list with all properties; filter query is case sensitive</p> <pre><code>USAGE\n  $ leapp session list [--columns &lt;value&gt; | -x] [--sort &lt;value&gt;] [--filter &lt;value&gt;] [--output csv|json|yaml |  |\n    [--csv | --no-truncate]] [--no-header | ]\n\nFLAGS\n  -x, --extended     show extra columns\n  --columns=&lt;value&gt;  only show provided columns (comma-separated)\n  --csv              output is csv format [alias: --output=csv]\n  --filter=&lt;value&gt;   filter property by partial string matching, ex: name=foo\n  --no-header        hide table header from output\n  --no-truncate      do not truncate output to fit screen\n  --output=&lt;option&gt;  output in a more machine friendly format\n                     &lt;options: csv|json|yaml&gt;\n  --sort=&lt;value&gt;     property to sort by (prepend '-' for descending)\n\nDESCRIPTION\n  Show sessions list with all properties; filter query is case sensitive\n\nEXAMPLES\n  $leapp session list\n\n  $leapp session list --filter=\"ID=Foo\" -x\n\n  $leapp session list --filter=\"Session Name=Foo\"\n\n  $leapp session list --filter=\"Type=Foo\"\n\n  $leapp session list --filter=\"Named Profile=Foo\"\n\n  $leapp session list --filter=\"Region/Location=Foo\"\n\n  $leapp session list --filter=\"Status=Foo\"\n</code></pre>"},{"location":"cli/scopes/session/#leapp-session-open-web-console","title":"<code>leapp session open-web-console</code>","text":"<p>Open an AWS Web Console</p> <pre><code>USAGE\n  $ leapp session open-web-console [--sessionId &lt;value&gt;] [-p]\n\nFLAGS\n  -p, --print          Print an AWS Web Console login URL in the terminal instead of opening the web browser\n  --sessionId=&lt;value&gt;  Session Id to identify the session in Leapp, recover it with $leapp session list -x\n\nDESCRIPTION\n  Open an AWS Web Console\n\nEXAMPLES\n  $leapp session open-web-console\n\n  $leapp session open-web-console --sessionId SESSIONID [--print, -p]\n</code></pre>"},{"location":"cli/scopes/session/#leapp-session-run-aws-credential-plugin","title":"<code>leapp session run-aws-credential-plugin</code>","text":"<p>Run a Leapp Plugin</p> <pre><code>USAGE\n  $ leapp session run-aws-credential-plugin [--sessionId &lt;value&gt;] [--pluginName &lt;value&gt;]\n\nFLAGS\n  --pluginName=&lt;value&gt;  Unique name of a Leapp Plugin\n  --sessionId=&lt;value&gt;   Session Id to identify the session in Leapp, recover it with $leapp session list -x\n\nDESCRIPTION\n  Run a Leapp Plugin\n\nEXAMPLES\n  $leapp session run-plugin\n\n  $leapp session run-plugin --sessionName SESSIONAME --pluginName PLUGINNAME\n</code></pre>"},{"location":"cli/scopes/session/#leapp-session-start-sessionname","title":"<code>leapp session start [SESSIONNAME]</code>","text":"<p>Start a session</p> <pre><code>USAGE\n  $ leapp session start [SESSIONNAME] [--sessionId &lt;value&gt;] [--sessionRole &lt;value&gt;] [--noInteractive]\n\nARGUMENTS\n  SESSIONNAME  Name of the Leapp session\n\nFLAGS\n  --noInteractive        If the specified session is not unique or doesn't exist, throw an error without starting the\n                         interactive session selection mode\n  --sessionId=&lt;value&gt;    Session Id to identify the session in Leapp, recover it with $leapp session list -x\n  --sessionRole=&lt;value&gt;  Session Role of one or more sessions in Leapp\n\nDESCRIPTION\n  Start a session\n\nEXAMPLES\n  $leapp session start\n\n  $leapp session start SESSIONNAME\n\n  $leapp session start SESSIONNAME --sessionRole SESSIONROLE\n\n  $leapp session start SESSIONNAME --noInteractive\n\n  $leapp session start --sessionId SESSIONID\n</code></pre>"},{"location":"cli/scopes/session/#leapp-session-start-ssm-session","title":"<code>leapp session start-ssm-session</code>","text":"<p>Start an AWS SSM session</p> <pre><code>USAGE\n  $ leapp session start-ssm-session [--sessionId &lt;value&gt;] [--region &lt;value&gt;] [--ssmInstanceId &lt;value&gt;]\n\nFLAGS\n  --region=&lt;value&gt;         Session Region for AWS sessions in Leapp\n  --sessionId=&lt;value&gt;      Session Id to identify the session in Leapp, recover it with $leapp session list -x\n  --ssmInstanceId=&lt;value&gt;  Instance ID for EC2 instance we want to access with SSM\n\nDESCRIPTION\n  Start an AWS SSM session\n\nEXAMPLES\n  $leapp session start-ssm-session\n\n  $leapp session start-ssm-session --sessionId SESSIONID --region AWSREGION --ssmInstanceId EC2INSTANCEID\n</code></pre>"},{"location":"cli/scopes/session/#leapp-session-stop-sessionname","title":"<code>leapp session stop [SESSIONNAME]</code>","text":"<p>Stop a session</p> <pre><code>USAGE\n  $ leapp session stop [SESSIONNAME] [--sessionId &lt;value&gt;] [--sessionRole &lt;value&gt;] [--noInteractive]\n\nARGUMENTS\n  SESSIONNAME  Name of the Leapp session\n\nFLAGS\n  --noInteractive        If the specified session is not unique or doesn't exist, throw an error without starting the\n                         interactive session selection mode\n  --sessionId=&lt;value&gt;    Session Id to identify the session in Leapp, recover it with $leapp session list -x\n  --sessionRole=&lt;value&gt;  Session Role of one or more sessions in Leapp\n\nDESCRIPTION\n  Stop a session\n\nEXAMPLES\n  $leapp session stop\n\n  $leapp session stop SESSIONNAME\n\n  $leapp session stop SESSIONNAME --sessionRole SESSIONROLE\n\n  $leapp session stop SESSIONNAME --noInteractive\n\n  $leapp session stop --sessionId SESSIONID\n</code></pre>"},{"location":"cli/scopes/set-workspace/","title":"leapp set-workspace","text":""},{"location":"cli/scopes/set-workspace/#leapp-set-workspace","title":"<code>leapp set-workspace</code>","text":"<p>Set the current Leapp workspace</p> <ul> <li><code>leapp set-workspace [WORKSPACENAME]</code></li> </ul>"},{"location":"cli/scopes/set-workspace/#leapp-set-workspace-workspacename","title":"<code>leapp set-workspace [WORKSPACENAME]</code>","text":"<p>Set the current Leapp workspace</p> <pre><code>USAGE\n  $ leapp set-workspace [WORKSPACENAME]\n\nARGUMENTS\n  WORKSPACENAME  name of the Leapp Team remote workspace or local\n\nDESCRIPTION\n  Set the current Leapp workspace\n\nEXAMPLES\n  $leapp team set-workspace\n\n  $leapp team set-workspace local\n\n  $leapp team set-workspace WORKSPACE-NAME\n</code></pre> <p>See code: dist/commands/set-workspace.ts</p>"},{"location":"cli/scopes/team/","title":"leapp team","text":""},{"location":"cli/scopes/team/#leapp-team","title":"<code>leapp team</code>","text":"<p>Login to your Team account</p> <ul> <li><code>leapp team login</code></li> <li><code>leapp team logout</code></li> <li><code>leapp team status</code></li> </ul>"},{"location":"cli/scopes/team/#leapp-team-login","title":"<code>leapp team login</code>","text":"<p>Login to your Team account</p> <pre><code>USAGE\n  $ leapp team login\n\nDESCRIPTION\n  Login to your Team account\n\nEXAMPLES\n  $leapp team login\n</code></pre>"},{"location":"cli/scopes/team/#leapp-team-logout","title":"<code>leapp team logout</code>","text":"<p>Logout from your Team account</p> <pre><code>USAGE\n  $ leapp team logout\n\nDESCRIPTION\n  Logout from your Team account\n\nEXAMPLES\n  $leapp team logout\n</code></pre>"},{"location":"cli/scopes/team/#leapp-team-status","title":"<code>leapp team status</code>","text":"<p>Get the team login status</p> <pre><code>USAGE\n  $ leapp team status\n\nDESCRIPTION\n  Get the team login status\n\nEXAMPLES\n  $leapp team status\n</code></pre>"},{"location":"cli/scopes/version/","title":"leapp version","text":""},{"location":"cli/scopes/version/#leapp-version","title":"<code>leapp version</code>","text":"<p>Displays the Cli and Core versions</p> <ul> <li><code>leapp version</code></li> </ul>"},{"location":"cli/scopes/version/#leapp-version_1","title":"<code>leapp version</code>","text":"<p>Displays the Cli and Core versions</p> <pre><code>USAGE\n  $ leapp version\n\nDESCRIPTION\n  Displays the Cli and Core versions\n\nEXAMPLES\n  $leapp version\n</code></pre> <p>See code: dist/commands/version.ts</p>"},{"location":"cli/scopes/workspace/","title":"leapp workspace","text":""},{"location":"cli/scopes/workspace/#leapp-workspace","title":"<code>leapp workspace</code>","text":"<p>Show the current workspace</p> <ul> <li><code>leapp workspace</code></li> </ul>"},{"location":"cli/scopes/workspace/#leapp-workspace_1","title":"<code>leapp workspace</code>","text":"<p>Show the current workspace</p> <pre><code>USAGE\n  $ leapp workspace\n\nDESCRIPTION\n  Show the current workspace\n\nEXAMPLES\n  $leapp workspace\n</code></pre> <p>See code: dist/commands/workspace.ts</p>"},{"location":"configuring-integration/configure-aws-single-sign-on-integration/","title":"Configure an AWS Identity Center (ex AWS Single Sign-On) integration","text":""},{"location":"configuring-integration/configure-aws-single-sign-on-integration/#what-is-aws-identity-center-ex-aws-single-sign-on","title":"What is AWS Identity Center (ex AWS Single Sign-On)","text":"<p>AWS Identity Center (ex AWS Single Sign-On) is a cloud service that allows you to grant your users access to AWS resources across multiple AWS accounts.</p> <p>AWS SSO provides a directory that you can use to create users, organize them in groups, and set permissions across those groups; alternatively, you can obtain them from your Microsoft Active Directory or any standards-based identity provider, such as Okta Universal Directory or Azure AD.</p> <p>After logging in the first time, Leapp will map all your roles and users into Sessions.  </p> <p>Info</p> <p>To get started using AWS SSO refer to this guide.</p>"},{"location":"configuring-integration/configure-aws-single-sign-on-integration/#how-to-configure-an-aws-identity-center-ex-aws-single-sign-on-integration-in-leapp","title":"How to configure an AWS Identity Center (ex AWS Single Sign-On) integration in Leapp","text":"<ol> <li>Click on the Add Integration button in the sidebar.</li> <li>Select AWS Single Sign-On as the Integration type.</li> <li>Provide the required information (described in the next section).</li> <li>Click on the Add integration button.</li> </ol>"},{"location":"configuring-integration/configure-aws-single-sign-on-integration/#required-information","title":"Required information","text":"Field Description <code>INTEGRATION TYPE</code> Set as AWS Single Sign-on <code>AWS SSO URL</code> The portal URL to begin the authentication flow. It usually follows this pattern: <code>d-xxxxxxxxxx.awsapps.com/start</code>. <code>REGION</code> The region on which AWS SSO is administered and configured. This is NOT where your generated credentials will be valid; it's only used for the login part."},{"location":"configuring-integration/configure-aws-single-sign-on-integration/#video-tutorial","title":"Video tutorial","text":""},{"location":"configuring-integration/configure-azure-integration/","title":"Configure an Azure integration","text":""},{"location":"configuring-integration/configure-azure-integration/#what-is-an-azure-integration","title":"What is an Azure integration","text":"<p>Our Leapp integration refers to Azure Tenant which is a dedicated and trusted instance of Azure AD.</p> <p>The tenant is automatically created when your organization signs up for a Microsoft cloud service subscription.</p> <p>These subscriptions include Microsoft Azure, Microsoft Intune, or Microsoft 365. </p> <p>An Azure tenant represents a single organization and can have multiple subscriptions.</p> <p>Please refer to How to find your Azure Active Directory tenant ID and other Azure AD documentation for more information.</p> <p>Warning</p> <p>For azure-cli users with version &lt; 2.30.0: Leapp no longer supports this version of the CLI. Please update to a newer version.</p> <p>To create a new Azure Integration, go to the left sidebar of Leapp Desktop and click on the  icon.  A new modal will be presented with the following option to compile. After submitting the new Integration  and have logged into your Azure Portal,  Subscriptions will be automatically retrieved and mapped into Leapp Azure Sessions.</p>"},{"location":"configuring-integration/configure-azure-integration/#how-to-configure-an-azure-integration-in-leapp","title":"How to configure an Azure integration in Leapp","text":"<ol> <li>Click on the Add Integration button in the sidebar.</li> <li>Select Azure as the Integration type.</li> <li>Provide the required information (described in the next section).</li> <li>Click on the Add integration button.</li> </ol>"},{"location":"configuring-integration/configure-azure-integration/#required-information","title":"Required information","text":"Field Description <code>INTEGRATION TYPE</code> Set as Azure <code>ALIAS</code> Your friendly integration name in Leapp. Give it a meaningful name so it will be easier to find inside Leapp. <code>TENANT ID</code> A tenant ID identifies a tenant. You can have multiple clients on a given tenant database. <code>LOCATION</code> The Azure datacenters are located around the world in strategic places that best meet the customer demands. These areas are known as Azure locations. Specific services requires the user to select a specific location. The value is retrieved from your default location in general options."},{"location":"configuring-integration/configure-azure-integration/#video-tutorial","title":"Video tutorial","text":"<p>Info</p> <p>Azure sessions are not available anymore for direct creation. Instead you can create a new Azure Integration.</p>"},{"location":"configuring-session/configure-aws-iam-role-chained/","title":"Configure AWS IAM Role Chained","text":""},{"location":"configuring-session/configure-aws-iam-role-chained/#what-is-an-aws-iam-role-chained-session","title":"What is an AWS IAM Role Chained session","text":"<p>An AWS IAM Role Chained session represents an AWS role chaining access. Role chaining is the process of assuming a role starting from another IAM role or user.</p> <p>An IAM role has some similarities to an IAM user. Roles and users are both AWS identities with permissions policies that determine what the identity can and cannot do in AWS. However, instead of being uniquely associated with one person, a role is intended to be assumable by anyone who needs it.</p> <p>A role does not have standard long-term credentials such as a password or access keys associated with it. Instead, when you assume a role, it provides you with temporary security credentials for your role session.</p> <p>Role chaining occurs when you use a role to assume a second role through the AWS CLI or API, even in other accounts.</p> <p>Info</p> <p>Refer to this guide to delegate access across AWS accounts using IAM Roles chaining.</p>"},{"location":"configuring-session/configure-aws-iam-role-chained/#how-to-configure-an-aws-iam-role-chained-in-leapp","title":"How to configure an AWS IAM Role Chained in Leapp","text":"<ol> <li>From the top bar, click on the plus icon to add a new session.</li> <li>Select Amazon AWS as the Cloud Provider.</li> <li>Select AWS IAM Role Chained as the access method.</li> <li>Provide the required information (described in the next section).</li> <li>Click on the Create Session button.</li> </ol>"},{"location":"configuring-session/configure-aws-iam-role-chained/#required-information","title":"Required information","text":"Field Description <code>SESSION ALIAS</code> Your friendly session name in Leapp. Give it a meaningful name so it will be easier to find inside Leapp. <code>NAMED PROFILE</code> Your friendly session name in the AWS credential file. You will be able to reference it from the AWS CLI with <code>--name</code>. <code>REGION</code> Your default region of choice. Select the one which you use the most for this Session. <code>ROLE ARN</code> Your IAM Role unique ID. The active Session will refer to this Role. <code>ROLE SESSION NAME</code> Your session name. You can query and search this on AWS Cloudtrail or any other linked audit service to find out what action were performed by the linked Identity. <code>ASSUMER SESSION</code> Your session from which this Role will be assumed. The <code>assume-role</code> call will be automatically made by Leapp."},{"location":"configuring-session/configure-aws-iam-role-chained/#video-tutorial","title":"Video tutorial","text":""},{"location":"configuring-session/configure-aws-iam-role-federated/","title":"Configure AWS IAM Role Federated","text":""},{"location":"configuring-session/configure-aws-iam-role-federated/#what-is-an-aws-iam-role-federated-session","title":"What is an AWS IAM Role Federated session","text":"<p>An AWS IAM Role Federated session represents an access type that relies on a federation between an AWS account and an external Identity Provider.  </p> <p>AWS Identity and Access Management (IAM) supports identity federation for delegated access to the AWS Management Console or AWS APIs.  With identity federation, external identities are granted secure access to resources in your AWS accounts through IAM roles.</p> <p>These external identities can come from your corporate identity provider (such as Microsoft Active Directory or from the AWS Directory Service)  or from a web identity provider (such as Amazon Cognito, Login with Amazon, Facebook, Google, or any OpenID Connect-compatible provider).</p> <p>We currently only support SAML 2.0 federation.</p> <p>Info</p> <ul> <li>Refer to this guide to provision your own federated roles.</li> <li>Refer to this guide to configure and trust your SAML 2.0 Identity Provider.</li> </ul>"},{"location":"configuring-session/configure-aws-iam-role-federated/#supported-saml-identity-providers","title":"Supported SAML Identity Providers","text":"Identity Provider AWS Azure <code>GSUITE</code> <code>OKTA</code> <code>ONELOGIN</code> <code>AZURE AD</code> <code>AUTH0</code> <code>KEYCLOAK</code> <code>JUMPCLOUD</code> <p>Info</p> <p>Is your SAML 2.0 Identity Provider not included in the above list? Please, refer to the FAQ to add a new one.</p>"},{"location":"configuring-session/configure-aws-iam-role-federated/#how-to-configure-an-aws-iam-role-federated-in-leapp","title":"How to configure an AWS IAM Role Federated in Leapp","text":"<ol> <li>From the top bar, click on the plus icon to add a new session.</li> <li>Select Amazon AWS as the Cloud Provider.</li> <li>Select AWS IAM Role Federated as the access method.</li> <li>Provide the required information (described in the next section).</li> <li>Click on the Create Session button.</li> </ol>"},{"location":"configuring-session/configure-aws-iam-role-federated/#required-information","title":"Required information","text":"Field Description <code>SESSION ALIAS</code> Your friendly session name in Leapp. Give it a meaningful name so it will be easier to find inside Leapp. <code>NAMED PROFILE</code> Your friendly session name in the AWS credential file. You will be able to reference it from the AWS CLI with <code>--name</code>. <code>REGION</code> Your default region of choice. Select the one which you use the most for this Session. <code>SAML 2.0 URL</code> Your SAML URL interface to start the authentication flow and log into your Identity provider. <code>AWS IDENTIY PROVIDER ARN</code> Your Identity Provider ID in AWS. You can find it in IAM section Identity Providers. <code>ROLE ARN</code> Your IAM Role unique ID. The active Session will refer to this Role."},{"location":"configuring-session/configure-aws-iam-role-federated/#video-tutorial","title":"Video tutorial","text":""},{"location":"configuring-session/configure-aws-iam-user/","title":"Configure AWS IAM User","text":""},{"location":"configuring-session/configure-aws-iam-user/#what-is-an-aws-iam-user-session","title":"What is an AWS IAM User session","text":"<p>An AWS Identity and Access Management (IAM) user is an entity that you create in AWS to represent the person or application that uses it to interact with AWS.</p> <p>An IAM User in AWS consists of a name and a set of long-term credentials. Leapp never sets these values in the configuration files, and automatically generates and refreshes a set of short-term credentials.</p> <p>Info</p> <p>If you want to know how Leapp generates and refresh short-term credentials refer to the credentials generation section in the documentation.</p>"},{"location":"configuring-session/configure-aws-iam-user/#how-to-configure-an-aws-iam-user-in-leapp","title":"How to configure an AWS IAM User in Leapp","text":"<ol> <li>From the top bar, click on the plus icon to add a new session.</li> <li>Select Amazon AWS as the Cloud Provider.</li> <li>Select AWS IAM User as the access method. </li> <li>Provide the required information (described in the next section). </li> <li>Click on the Create Session button.</li> </ol>"},{"location":"configuring-session/configure-aws-iam-user/#required-information","title":"Required information","text":"Field Description <code>SESSION ALIAS</code> Your friendly session name in Leapp. Give it a meaningful name so it will be easier to find inside Leapp. <code>NAMED PROFILE</code> Your friendly session name in the AWS credential file. You will be able to reference it from the AWS CLI with <code>--name</code>. <code>REGION</code> Your default region of choice. Select the one which you use the most for this Session. <code>MFA DEVICE</code> Your MFA device ID to set up multi-factor authentication. <code>ACCESS KEY ID</code> Your long-term Access Key. It will be used to generate a short-term set of credentials. Don't disclose it to anyone. <code>SECRET ACCESS KEY</code> Your long-term Secret Key. It will be used to generate a short-term set of credentials. Don't disclose it to anyone. Add AWS IAM User Screen"},{"location":"configuring-session/configure-aws-iam-user/#video-tutorial","title":"Video tutorial","text":""},{"location":"configuring-session/configure-localstack/","title":"Configure LocalStack","text":""},{"location":"configuring-session/configure-localstack/#what-is-a-localstack-session","title":"What is a LocalStack session","text":"<p>With LocalStack you can emulate AWS cloud services with a fully functional cloud stack on your local machine. Develop and test your cloud applications with the full cloud experience, but without the hassle of the remote cloud.</p> <p>You can use Leapp to create a LocalStack session that can then be used to set your local credential file and access your LocalStack resources.</p> <p>Info</p> <p>You need to install LocalStack in order to use the AWS cloud emulation features</p>"},{"location":"configuring-session/configure-localstack/#how-to-configure-a-localstack-session-in-leapp","title":"How to configure a LocalStack session in Leapp","text":"<ol> <li>From the top bar, click on the plus icon to add a new session.</li> <li>Select LocalStack as the Cloud Provider.</li> <li>Provide a name for the session.</li> <li>Click on the Create Session button.</li> </ol> <p>Warning</p> <p>LocalStack sessions work only with AWS Credential Method configured with the <code>credential-file-method</code> option. The option is available in the Options menu &gt; General &gt; Generics &gt; AWS Credential Method.</p> <p>Warning</p> <p>In order to use the credential file to access LocalStack from your AWS CLI, you must update the AWS CLI to the latest version.</p>"},{"location":"contributing/get-involved/","title":"Get involved","text":""},{"location":"contributing/get-involved/#get-involved","title":"Get involved","text":"<p>Contributions and questions are not just welcome, they\u2019re essential! Please open issues with ideas on how to improve Leapp, including feedback, critiques, and information about how you\u2019re using it. Discussion is at the heart of the project and your thoughts and ideas will help make it better for everyone, thank you. </p> <p>Read our contribution guide to learn more.</p> <p>You can chat with us in our community, so join us, or feel free to contact us via the website!</p> <p>Join our Community </p>"},{"location":"installation/install-leapp/","title":"Install Leapp","text":""},{"location":"installation/install-leapp/#install-leapp-app","title":"Install Leapp App","text":""},{"location":"installation/install-leapp/#macos-windows-and-linux","title":"MacOS, Windows, and Linux","text":"<p>You can install Leapp by downloading the pre-built binaries for your OS on the website release page:</p> <p>Download Leapp \u21e9</p> <p>Unzip the package and double-click the executable to install.</p>"},{"location":"installation/install-leapp/#macos-homebrew","title":"macOS (Homebrew)","text":"<p>Leapp can also be installed on macOS via Homebrew Cask with:</p> <pre><code>brew install leapp\n</code></pre> <p>Info</p> <p>In addition, Leapp can also be installed with Linuxbrew on Windows via WSL</p>"},{"location":"installation/install-leapp/#install-leapp-cli","title":"Install Leapp CLI","text":"<p>You can install Leapp CLI through a Homebrew Formula:</p> <pre><code>brew install Noovolari/brew/leapp-cli\n</code></pre> <p>In Linux it may happen that the command <code>leapp</code> is not recognized. In that case we suggest to run the following command:</p> <pre><code>brew link leapp-cli\n</code></pre>"},{"location":"installation/install-leapp/#install-leapp-cli-on-macos-with-arm64-chip-m1-m2","title":"Install Leapp CLI on macOS with ARM64 chip (M1, M2)","text":"<p>On macOS with ARM64 chip you can use the Homebrew Formula:</p> <pre><code>brew install Noovolari/brew/leapp-cli-darwin-arm64\n</code></pre> <p>All the available commands are listed in the Leapp CLI section of the documentation.</p> <p>Warning</p> <p>Leapp CLI will work only if the Desktop App is installed and running.</p>"},{"location":"installation/requirements/","title":"Requirements","text":""},{"location":"installation/requirements/#requirements","title":"Requirements","text":""},{"location":"installation/requirements/#macos-and-windows","title":"MacOS and Windows","text":"<p>There are no requirements for macOS and Windows users.</p>"},{"location":"installation/requirements/#linux-systems","title":"Linux systems","text":"<p>Leapp uses <code>libsecret</code> and <code>gnome-keyring</code> as dependencies to store all sensitive data into the keyring. Depending on your distribution, you may need to install them using these commands before running Leapp.</p> Arch LinuxDebian/UbuntuRed Hat-based <pre><code>sudo pacman -S gnome-keyring\nsudo pacman -S libsecret\n</code></pre> <pre><code>sudo apt-get install gnome-keyring\nsudo apt-get install libsecret-1-dev\n</code></pre> <pre><code>sudo yum install gnome-keyring\nsudo yum install libsecret-devel\n</code></pre>"},{"location":"installation/requirements/#logging-into-ec2-instances-via-aws-ssm-with-leapp","title":"Logging into EC2 Instances via AWS SSM with Leapp","text":"<p>In order to use AWS SSM on your System through Leapp, you must be able to execute this command  on your own at least once, when the correct credentials are active.</p> <pre><code>aws ssm start-session --region &lt;region&gt; --target &lt;instanceId&gt;\n</code></pre> <p>If, for any reason, this command fails, please verify that you have Python 3.x installed:</p> <pre><code>https://www.python.org/downloads/\n</code></pre> <p>Also verify that the AWS SSM Agent is installed correctly by following the official AWS guide:</p> <pre><code>https://docs.aws.amazon.com/systems-manager/latest/userguide/ssm-agent-v3.html\n</code></pre>"},{"location":"installation/update-leapp/","title":"Update Leapp","text":""},{"location":"installation/update-leapp/#update-leapp","title":"Update Leapp","text":""},{"location":"installation/update-leapp/#desktop-app","title":"Desktop App","text":"<p>Leapp checks if a new version is available every 10 minutes (starting from the application launch).  If so, a dialog message will pop up and show a <code>version number</code>, the <code>release date</code> and the <code>changelog</code></p> <p>In this modal, a user can do the following:</p> Remind me laterDownload updateClick on X <p>Leapp will close the modal and notify the user that a new update is available by adding a notification dot   to the Dock Bar icon. Users will not be bothered anymore until the next release is available.  This option is convenient for users that want to stick to a specific version.  Note that you can do this for every version and maintain the one you prefer.</p> <p>Leapp will open the Release URL in your default browser to let the User  manually download the release for their specific OS and install it.</p> <p>Leapp will close the modal and another one will appear in 10 minutes.</p>"},{"location":"installation/update-leapp/#macos-homebrew-linux-linuxbrew-and-windows-via-wsl","title":"macOS (Homebrew), Linux (Linuxbrew) and Windows (via WSL)","text":"<p>Leapp can also be updated via Homebrew Cask with: <code>brew upgrade leapp</code></p>"},{"location":"installation/update-leapp/#cli","title":"CLI","text":"<p>Depending on which method you used to install the CLI (npm or Homebrew on macOS), you can update it with the following commands:</p> npmHomebrew (macOS) <pre><code>npm update -g @noovolari/leapp-cli\n</code></pre> <pre><code>brew upgrade Noovolari/brew/leapp-cli\n</code></pre>"},{"location":"leapp-pro/security-and-password/","title":"Security and password","text":""},{"location":"leapp-pro/security-and-password/#password-issues","title":"Password issues","text":""},{"location":"leapp-pro/security-and-password/#can-i-recover-my-password","title":"Can I recover my password?","text":"<p>Unfortunately, it is not possible to recover the master password. The master password is very important as it's the key point of our zero-knowledge encryption mechanism. If you forget it, you'll lose access to the previously encrypted Leapp Sessions and Integrations. That's why it is crucial that you keep your password safe; we suggest you to store it in a password manager like 1Password.</p>"},{"location":"leapp-pro/security-and-password/#how-is-my-data-encrypted","title":"How is my data encrypted?","text":"<p>All information associated with your stored data is protected with end-to-end encryption.  Leapp Sessions and Integrations are encrypted before being forwarded to the backend.  Specifically, Leapp Pro uses AES 256-bit encryption as well as PBKDF-SHA512 to secure your data.</p> <p>AES is a standard in cryptography and is used by the U.S. government and other government agencies around the world for protecting top-secret data. With proper implementation and a strong encryption key (your Master Password), AES is considered unbreakable.</p> <p>PBKDF-SHA512 is used to derive the encryption key from your master password. Then this key is salted and hashed for authenticating with the Leapp Pro backend. The default iteration count used with PBKDF2 is 500,000 iterations on the client. Each Secret has its own generated symmetric key;  this symmetric key is encrypted using the user\u2019s public RSA key (this is also the foundation of the Secret sharing system).  This encryption and decryption are done entirely on the Leapp Pro clients because your master password is never stored on or transmitted to Leapp Team backend.</p> <p>It is important to highlight the fact that the backend does not act as a credentials broker, i.e. it has no visibility on the long-term/short-term credentials  used by Leapp Pro Desktop App/CLI to access the cloud providers. In addition, the secrets retrieved from the backend, are an encrypted version of access configurations; access configurations DO NOT include temporary credentials. There is a single edge case: the IAM User.  Indeed, the IAM User Session access configuration contains IAM User\u2019s access keys, which are long-term credentials.  Still, the Leapp Pro backend has no visibility on these long-term credentials, as they\u2019re encrypted by the client before being forwarded to the Leapp Team backend.</p>"},{"location":"leapp-pro/security-and-password/#touch-id","title":"Touch ID","text":"<p>When you unlock Leapp Pro, using a longer and more secure account password is easier than you might otherwise have chosen.</p>"},{"location":"leapp-pro/security-and-password/#your-fingerprint-is-not-stored-in-leapp","title":"Your fingerprint is not stored in Leapp.","text":"<p>Leapp never scans or stores your fingerprint. Touch ID is provided by macOS, which only tells Leapp Pro if your fingerprint was recognized or not.</p> <p>Learn more about Touch ID's advanced security technology.</p>"},{"location":"leapp-pro/synchronization/","title":"Synchronization","text":""},{"location":"leapp-pro/synchronization/#whats-a-pro-workspace","title":"What's a Pro Workspace","text":"<p>A Pro Workspace is a new Workspace that is created upon first login with your registered Pro User.  This workspace is synchronized with your Cloud account every time you create, edit, or delete an integration or a session;  this way it is possible to use Leapp Pro on different devices, maintaining all your saved integrations and sessions.</p>"},{"location":"leapp-pro/synchronization/#how-the-synchronization-works","title":"How the Synchronization works","text":"<p>Synchronization works by encrypting all your  sessions and integrations with your master password, created during your sign-up process.  This way we maintain a 0-knowlegde approach on your data through all the lifecycle of your Pro workspace.</p> <p>The encrypted data is then saved in the Cloud on your Leapp Pro personal space.</p> <p>You, as a Leapp Pro user, can always keep an eye on the status of synchronization using the synchronization widget in the bottom-left area of Leapp.</p> Synchronization widget - synchronization active and done <p>When all the data is correctly synchronized you'll see the image above. </p> <p>When Leapp Pro is synchronizing you'll see the icon and text changing to the one in the image below.</p> Synchronization widget - synchronization in progress <p>If you eventually lose connection or have a problem in synchronizing your data the widget will turn yellow as shown below.</p> Synchronization widget - synchronization failed <p>You have the possibility to manually trigger another synchronization process and see if the problem is resolved.</p> <p>Info</p> <p>When Leapp Pro is restarted it will try to synchronize your data in the Cloud if you're logged in, so you can also close Leapp safely even if in synch failed state.</p>"},{"location":"leapp-pro/synchronization/#do-you-have-any-trouble-with-synchronization","title":"Do you have any trouble with Synchronization","text":"<p>In case of any troubles locking Leapp Pro workspace please contact us.</p>"},{"location":"leapp-pro/getting-started/","title":"Getting Started","text":""},{"location":"leapp-pro/getting-started/#why-leapp-pro","title":"Why Leapp Pro?","text":"<p>Leapp Pro enable Users to protect their Cloud access with Username and password.</p> <p>With Leapp Pro you can back up and synchronize your Leapp workspace and access to any device you want without losing your access configurations.</p>"},{"location":"leapp-pro/getting-started/#getting-started-guide","title":"Getting started guide","text":"<ul> <li>Sign up to Leapp Pro</li> <li>Sign in to Leapp Pro</li> <li>Lock your Leapp Pro Workspace</li> </ul>"},{"location":"leapp-pro/getting-started/#security-and-syncronization","title":"Security and syncronization","text":"<p>Once you updgrade your Plan to Leapp Pro, your local Workspace will be moved to the Pro Workspace.  All the data inside your workspace are secured with end-to-end encryption through your Master password.</p>"},{"location":"leapp-pro/getting-started/lock/","title":"Lock your Workspace","text":"<p>Leapp Pro allows the user to temporary lock the workspace, making it accessible only by typing again your master-password.  This feature provides a further security level on top of the standard Leapp Community edition.</p>"},{"location":"leapp-pro/getting-started/lock/#how-to-lock-the-leapp-pro-workspace","title":"How to lock the Leapp Pro workspace","text":"<p>To lock your Leapp Pro workspace you should click on the Workspace button located in the top-left area and select the Lock option.</p> Workspace button Lock option <p>The Leapp Pro lock screen should appear, prompting for your master-password.</p> Leapp Pro lock screen"},{"location":"leapp-pro/getting-started/lock/#touch-id","title":"Touch ID","text":"<p>You can also use your fingerprint to unlock Leapp if your PC is Touch ID compatible.  After Logging to your Pro workspace for the first time, Leapp will associate your workspace with your system Touch ID.  After that the option will be available and can also be tweaked in the general tab of the option menu.</p>"},{"location":"leapp-pro/getting-started/lock/#troubles-in-locking-your-workspace","title":"Troubles in locking your Workspace","text":"<p>In case of any troubles locking Leapp Pro workspace please contact us.</p>"},{"location":"leapp-pro/getting-started/sign-in/","title":"Sign-in","text":"<p>With Leapp Pro you can always sign-in from any location, gaining instant access to your personal workspace.</p>"},{"location":"leapp-pro/getting-started/sign-in/#sign-in-to-leapp-pro","title":"Sign-in to Leapp Pro","text":"<p>After upgrading Leapp Community edition, you can sign-in at any time, just clicking on the Workspace button  located in the top-left area and selecting the Sign-in Workspace option.</p> Workspace button Sign-in Workspace option <p>The Sign-in Workspace dialog will appear.  Enter your Email address, master-password and click on the Add Workspace button.</p> Sign-in dialog <p>If the information entered is correct, your Leapp Pro workspace will be displayed and you can immediately use  it to manage your cloud credentials.</p> Leapp Pro Workspace <p>To avoid unwanted access, you can lock your Leapp Pro workspace at any time.</p>"},{"location":"leapp-pro/getting-started/sign-in/#troubles-in-signing-in-to-leapp-pro","title":"Troubles in signing in to Leapp Pro?","text":"<p>In case of any troubles signing in to Leapp Pro please contact us.</p>"},{"location":"leapp-pro/getting-started/sign-up/","title":"Sign-up","text":"<p>A Leapp Pro upgrade is required to enable new workspace features like Cloud access from multiple locations and Workspace locking. </p>"},{"location":"leapp-pro/getting-started/sign-up/#sign-up-to-leapp-pro","title":"Sign-up to Leapp Pro","text":"<p>To sign up for Leapp Pro you should upgrade your version of Leapp Community edition.  Click on the Options button in the top-right area.</p> Settings button <p>In the Options dialog, select the Plans tab and click on Upgrade to Pro button.</p> Plans tab <p>The upgrade window should appear. Enter your email (it will be the email address associated with your Leapp Pro account) and click on the Upgrade now button.</p> Upgrade window <p>At this point a window will appear, so you can specify a payment method to complete the Leapp Pro upgrade. After the payment process you will receive a confirmation email containing the Complete the registration link.</p> Upgrade email <p>Clicking the link in the confirmation email will open a web page that will allow you to enter your personal info  and the master-password, essential to provide the security requirements of Leapp Pro.</p> Sign-up page <p>After entering your personal info and the master-password click the Continue button. You can now finally sign in to Leapp Pro.</p>"},{"location":"leapp-pro/getting-started/sign-up/#troubles-in-signing-up-to-leapp-pro","title":"Troubles in signing up to Leapp Pro?","text":"<p>In case of any troubles signing up to Leapp Pro please contact us.</p>"},{"location":"leapp-pro/getting-started/sign-up/#how-to-sign-in","title":"How to Sign-in","text":"<p>Take a look to this page to sign-in your Leapp Pro workspace.</p>"},{"location":"plugins/plugins-development/","title":"Developer Reference","text":"<p>This document is a Plugin SDK reference. The Plugin SDK is part of Leapp Core and contains Base Classes that describe different types of plugins.</p>"},{"location":"plugins/plugins-development/#pluginenvironment","title":"PluginEnvironment","text":"<p>A wrapper class used to expose a minumum set of methods from Leapp Core.</p> <p>Currently available methods:</p>"},{"location":"plugins/plugins-development/#log","title":"log","text":"<ul> <li><code>log</code><code>(message: string, level: PluginLogLevel, display: boolean): void</code></li> </ul> <p>Log a custom message in Leapp or in the log file</p> argument type description message string the message to show level LogLevel severity of the message display boolean shows the message in a toast in the desktop app when true. Otherwise, log it in the log files"},{"location":"plugins/plugins-development/#fetch","title":"fetch","text":"<ul> <li><code>fetch</code><code>(url: string): any</code></li> </ul> <p>Retrieve the content of a URL. Returns a promise for the URL</p> argument type description url string a valid HTTP URL to fetch from"},{"location":"plugins/plugins-development/#openexternalurl","title":"openExternalUrl","text":"<ul> <li><code>openExternalUrl</code><code>(url: string): void</code></li> </ul> <p>Open an external URL in the default browser</p> argument type description url string a valid HTTP URL to open in the default browser"},{"location":"plugins/plugins-development/#createsession","title":"createSession","text":"<ul> <li><code>createSession</code><code>(createSessionData: SessionData): Promise&lt;string&gt;</code></li> </ul> <p>Creates a new Leapp Session based on given SessionData</p> argument type description createSessionData SessionData the metadata used to create the Leapp Session"},{"location":"plugins/plugins-development/#clonesession","title":"cloneSession","text":"<ul> <li><code>cloneSession</code><code>(session: Session): Promise&lt;string&gt;</code></li> </ul> <p>This method allows you to clone the given Leapp Session. This operation is allowed for the following Leapp Session types:</p> <ul> <li>AwsIamUserSession</li> <li>AwsIamRoleFederatedSession</li> <li>AwsIamRoleChainedSession</li> </ul> argument type description session Session the Leapp Session that I want to clone"},{"location":"plugins/plugins-development/#updatesession","title":"updateSession","text":"<ul> <li><code>updateSession</code><code>(updateSessionData: SessionData, session: Session): Promise&lt;void&gt;</code></li> </ul> <p>This method allows you to update the given session with the given updateSessionData. This operation is allowed for the following Leapp Session types:</p> <ul> <li>AwsIamUserSession</li> <li>AwsIamRoleFederatedSession</li> <li>AwsIamRoleChainedSession</li> </ul> argument type description updateSessionData SessionData the metadata used to update the given Leapp Session session Session the Leapp Session that I want to update"},{"location":"plugins/plugins-development/#openterminal","title":"openTerminal","text":"<ul> <li><code>openTerminal</code><code>(command: string, env?: any): Promise&lt;void&gt;</code></li> </ul> <p>Execute the given command in the platform-specific terminal; optionally, it is possible to set an env key/value object containing the env variables to export in the terminal, before the command execution.</p> <p>The terminal window base path is set to the home directory.</p> argument type description command string the command that I want to execute in the platform-specific terminal env any optional key/value env variables object"},{"location":"plugins/plugins-development/#getprofileidbyname","title":"getProfileIdByName","text":"<ul> <li><code>getProfileIdByName</code><code>(profileName: string): string</code></li> </ul> <p>Returns the id of a named profile from its name if it exists, otherwise creates a new profile and returns its id. </p> <p>Can be used when creating/editing a session since SessionData requires the id of a named profile</p> argument type description profileName string a valid named profile"},{"location":"plugins/plugins-development/#getidpurlidbyurl","title":"getIdpUrlIdByUrl","text":"<ul> <li><code>getIdpUrlIdByUrl</code><code>(url: string): string</code></li> </ul> <p>Return the ID of the IdpUrl object from the given URL if it exists, otherwise creates a new IdP URL and returns its ID.</p> <p>Can be used when creating/editing Federated Sessions since SessionData requires the ID of an IdP URL.</p> argument type description url string the URL associated with the IdpUrl I want to retrieve"},{"location":"plugins/plugins-development/#example-display-a-toast-message-in-leapp","title":"Example: display a toast message in Leapp","text":"<pre><code>this.pluginEnvironment.log(\"Hello World\", LogLevel.info, true);\n</code></pre>"},{"location":"plugins/plugins-development/#example-fetch-basic-usage","title":"Example: fetch basic usage","text":"<pre><code>const res = await this.pluginEnvironment.fetch(\"\"); //Insert a custom URL\nconst response = await res.json();\n</code></pre>"},{"location":"plugins/plugins-development/#example-open-a-url-in-the-browser","title":"Example: open a URL in the browser","text":"<pre><code>this.pluginEnvironment.openExternalUrl(\"https://leapp.cloud\");\n</code></pre>"},{"location":"plugins/plugins-development/#example-create-a-session","title":"Example: create a session","text":"<pre><code>async applySessionAction(session: Session, credentials: any): Promise&lt;void&gt; {\n    const profileId = this.pluginEnvironment.getProfileIdByName(\"default\");\n    const idpUrlId = this.pluginEnvironment.getIdpUrlIdByUrl(\"put a valid url for an IdP here\");\n\n    this.pluginEnvironment.createSession(new AwsIamRoleFederatedSessionData(\n      \"arn:aws:iam::000000000000:saml-provider/test\",\n      idpUrlId,\n      profileId,\n      \"us-east-1\",\n      \"arn:aws:iam::000000000000:role/test\",\n      \"New Name Session\"\n    ));\n}\n</code></pre>"},{"location":"plugins/plugins-development/#example-edit-the-selected-session","title":"Example: edit the selected session","text":"<pre><code>async applySessionAction(session: Session, credentials: any): Promise&lt;void&gt; {\n    const profileId = this.pluginEnvironment.getProfileIdByName(\"default\");\n    const idpUrlId = this.pluginEnvironment.getIdpUrlIdByUrl(\"put a valid url for an IdP here\");\n    this\n    .pluginEnvironment.updateSession(new AwsIamRoleFederatedSessionData(\n        \"arn:aws:iam::000000000000:saml-provider/test\", \n        idpUrlId, \n        profileId, \n        \"us-east-1\", \n        \"arn:aws:iam::000000000000:role/test\", \n        \"New Name Session\"\n    ), session);\n}\n</code></pre>"},{"location":"plugins/plugins-development/#example-clone-the-selected-session","title":"Example: clone the selected session","text":"<pre><code>async applySessionAction(session: Session, credentials: any): Promise&lt;void&gt; {\n    await this.pluginEnvironment.cloneSession(session);\n}\n</code></pre>"},{"location":"plugins/plugins-development/#awscredentialsplugin","title":"AwsCredentialsPlugin","text":"<p>A base class that needs to be extended by a plugin and serves as the action class.</p> <p>After extending this class, you need to implement these methods:</p>"},{"location":"plugins/plugins-development/#applysessionaction","title":"applySessionAction","text":"<ul> <li><code>applySessionAction</code><code>(session: Session, credentials: any): Promise&lt;void&gt;</code></li> </ul> <p>Run your custom action</p> argument type description session Session the Leapp session you run the action from credentials any Leapp temporary-generated credentials <p>The <code>credentials</code> object has the following structure:</p> <pre><code>export interface CredentialsInfo {\n  sessionToken: {\n    aws_access_key_id: string;\n    aws_secret_access_key: string;\n    aws_session_token: string;\n    region: string;\n  }\n}\n</code></pre>"},{"location":"plugins/plugins-development/#get-actioname","title":"get actioName","text":"<ul> <li><code>get actionName</code><code>(): string&gt;</code></li> </ul> <p>Return a name for the action that will be display in Leapp (e.g. \"My Awesome Plugin\")</p>"},{"location":"plugins/plugins-development/#get-actionicon","title":"get actionIcon","text":"<ul> <li><code>get actionIcon</code><code>(): string</code></li> </ul> <p>Return a valid FontAwesome 5 code. Override default value in <code>package.json</code></p>"},{"location":"plugins/plugins-development/#example-display-a-session-based-message-in-leapp","title":"Example: display a session-based message in Leapp","text":"<pre><code>async applySessionAction(session: Session, credentials: any): Promise&lt;void&gt; {\n    if(session.type === Session.awsIamUser) {\n        this.pluginEnvironment.log(`This is an IAM User session: ${session.sessionName}`, LogLevel.info, true); \n    }\n    else {\n        this.pluginEnvironment.log(`This is NOT an IAM User session: ${session.sessionName}`, LogLevel.info, true);\n    }\n}\n</code></pre>"},{"location":"plugins/plugins-development/#packagejson-metadata","title":"package.json metadata","text":"property values description constraints name a custom string the name of the plugin the same used in the plugin folder author a custom string the name of the author none version a custom string the version of the plugin must be a semver string description a custom string the description of the plugin none keywords a string array the name of the plugin must contain at least \"leapp-plugin\" leappPlugin an object the plugin custom configuration must contain at least \"supportedOS\" and \"supportedSessions\" leappPlugin.supportedOS a string array [\"mac\", \"windows\", \"linux\"] if not specified, all OSs will be considered compatible leappPlugin.supportedSessions a string array [\"anyType, \"aws\", \"azure\", \"awsIamRoleFederated\", \"awsIamRoleChained\", \"awsSsoRole\", \"awsIamUser\"] at least one of these values must be specified leappPlugin.icon a custom string fontAwesome code for an icon (e.g. \"fa fa-globe\") must be a valid FontAwesome 5 code"},{"location":"plugins/plugins-development/#plugin-examples","title":"Plugin Examples","text":""},{"location":"plugins/plugins-development/#open-web-console","title":"Open Web Console","text":"<pre><code>import { Session } from \"@noovolari/leapp-core/models/session\";\nimport { AwsCredentialsPlugin } from \"@noovolari/leapp-core/plugin-sdk/aws-credentials-plugin\";\nimport { PluginLogLevel } from \"@noovolari/leapp-core/plugin-sdk/plugin-log-level\";\n\nexport class WebConsolePlugin extends AwsCredentialsPlugin {\n  get actionName(): string {\n    return \"Open web console\";\n  }\n\n  get actionIcon(): string {\n    return \"fa fa-globe\";\n  }\n\n  async applySessionAction(session: Session, credentials: any): Promise&lt;void&gt; {\n    this.pluginEnvironment.log(\"Opening web console for session: \" + session.sessionName, PluginLogLevel.info, true);\n\n    const sessionRegion = session.region;\n    const sessionDuration = 3200;\n    const isUSGovCloud = sessionRegion.startsWith(\"us-gov-\");\n    let federationUrl;\n    let consoleHomeURL;\n\n    if (!isUSGovCloud) {\n      federationUrl = \"https://signin.aws.amazon.com/federation\";\n      consoleHomeURL = `https://${sessionRegion}.console.aws.amazon.com/console/home?region=${sessionRegion}`;\n    } else {\n      federationUrl = \"https://signin.amazonaws-us-gov.com/federation\";\n      consoleHomeURL = `https://console.amazonaws-us-gov.com/console/home?region=${sessionRegion}`;\n    }\n\n    if (sessionRegion.startsWith(\"cn-\")) {\n      throw new Error(\"Unsupported Region\");\n    }\n\n    this.pluginEnvironment.log(\"Starting opening Web Console\", PluginLogLevel.info, true);\n\n    const sessionStringJSON = {\n      sessionId: credentials.sessionToken.aws_access_key_id,\n      sessionKey: credentials.sessionToken.aws_secret_access_key,\n      sessionToken: credentials.sessionToken.aws_session_token,\n    };\n\n    const queryParametersSigninToken = `?Action=getSigninToken&amp;SessionDuration=${sessionDuration}&amp;Session=${encodeURIComponent(\n      JSON.stringify(sessionStringJSON)\n    )}`;\n\n    const res = await this.pluginEnvironment.fetch(`${federationUrl}${queryParametersSigninToken}`);\n    const response = await res.json();\n\n    const loginURL = `${federationUrl}?Action=login&amp;Issuer=Leapp&amp;Destination=${consoleHomeURL}&amp;SigninToken=${(response as any).SigninToken}`;\n    this.pluginEnvironment.openExternalUrl(loginURL);\n  }\n}\n</code></pre>"},{"location":"plugins/plugins-introduction/","title":"Introduction to Plugins","text":"<p>This section provides an overview of Leapp\u2019s plugins, which can be used to extend the functionality of Leapp.</p> <p>Plugins are commonly used when more advanced and custom behavior is needed, for example using Leapp-generated temporary credentials to run custom actions.</p> <p>You can create your own plugins or import custom ones created by the community. You can also publish your plugins on npm to make them available to everyone easily.</p>"},{"location":"plugins/plugins-introduction/#add-a-plugin","title":"Add a Plugin","text":"<p>To add a plugin you can use one of the following methods:</p>"},{"location":"plugins/plugins-introduction/#add-from-npm","title":"Add from npm","text":"<p>From the Leapp option menu, go to the Plugins tab. Insert the name of the npm package for the plugin and click on the plus icon to add it to your plugins</p>"},{"location":"plugins/plugins-introduction/#add-manually","title":"Add manually","text":"<p>Go to Options by clicking the top right gear icon then click the Plugins tab. Click the Folder Icon. This will open the plugin folder inside .Leapp. </p> <p>Here, manually create a folder with the same name as your plugin package.json name property and move your <code>package.json</code> and bundled <code>plugin.js</code> files inside this folder.</p> <p>Alternatively, you can simply move your entire plugin folder cloned from the example template.</p> <p>Lastly, from the Leapp Plugins tab in the Option menu, click on the refresh icon to reload all plugins.</p> <p>Warning</p> <p>Adding plugins is at your own risk! We cannot currently guarantee that a plugin is safe, so BE CAREFUL when you install something from an unknown source.  A plugin verification system is under development and will be available later this year.</p>"},{"location":"plugins/plugins-introduction/#disable-a-plugin","title":"Disable a Plugin","text":"<p>To disable a Leapp plugin, go to Options by clicking the top right gear icon then click the Plugins tab. </p> <p>Toggle Enabled for the plugin you want to disable.</p>"},{"location":"plugins/plugins-introduction/#remove-a-plugin","title":"Remove a Plugin","text":"<p>To remove a Leapp plugin, go to Options by clicking the top right gear icon then click the Plugins tab. </p> <p>Click the Folder Icon. This will open the plugin folder inside .Leapp.  From here, locate the folder containing the plugin you want to remove and simply delete the folder.</p>"},{"location":"plugins/plugins-introduction/#run-a-plugin","title":"Run a Plugin","text":"<p>You can run a plugin both from Leapp Desktop App and Leapp CLI.</p> <p>From Leapp Desktop App, right click on a session to open the contextual menu, click on Plugins, and select the plugin you want to run</p> <p>Info</p> <p>This contextual menu option is not available if you have no plugins that you can run on the selected session and/or your operating system.</p> <p>From Leapp CLI, you can use the command <code>leapp session run-plugin</code>. For more information on how to use this CLI command, see the documentation.</p>"},{"location":"plugins/plugins-introduction/#plugin-menu","title":"Plugin Menu","text":"<p>Click on the top right gear icon to go to the Leapp option menu and then select the tab Plugin.</p> <p>From there, you can see a list of currently installed plugins, check whether a plugin is compatible with your system or not, which session types it supports and disable/enable it if you need.</p>"},{"location":"plugins/plugins-introduction/#create-your-plugin","title":"Create your Plugin","text":"<p>You can start creating a plugin from the template.</p> <p>Leapp plugins are written in TypeScript. They must contain at least a class that extends a base class provided by the Plugin SDK.</p> <p>There's currently only one of these classes, <code>AwsCredentialsPlugin</code> , that can be used to create a plugin that generates temporary credentials.</p> <p>Every Leapp plugin must at least have a <code>package.json</code> file and a <code>plugin.js</code> file.</p> <pre><code>leapp-plugin/             \n \u251c\u2500\u2500 package.json      # Plugin metadata\n \u2514\u2500\u2500 plugin.js         # A webpack bundle for the main logic\n</code></pre> <p>Create your Plugin</p>"},{"location":"security/credential-process/","title":"Credential Process","text":""},{"location":"security/credential-process/#what-is-credential-process","title":"What is Credential Process?","text":"<p>Credential Process is a configuration option  (in the AWS config file) that instruct the AWS CLI and SDKs to use an external command to generate valid credentials in a specific format. </p> <p>It is a way to generate AWS compatible credentials on the fly, only when requested by tools that respect the AWS credential chain.</p> <p>Credential Process is perfect if you have a way to generate or look up credentials that isn't directly supported by the AWS CLI or third-party tools;  for example, you can configure the AWS CLI to use it by configuring the credential_process setting in the config file.</p> <p>The difference between Credential Process and Standard Credential file is that credentials in the \"credential file\" are written in plain text and so,  they are potentially unsecure, even if temporary. Credential Process instead, generates credentials that are consumed only when they are effectively needed. </p> <p>No credential is written in any file. They are printed on the stdout and consumed upon request.</p>"},{"location":"security/credential-process/#how-credential-process-works","title":"How Credential Process works?","text":"<p>Credential Process asks an external process to generate an AWS compatible temporary credential set in this format: </p><pre><code>{\n  \"Version\": 1,\n  \"AccessKeyId\": \"an AWS access key\",\n  \"SecretAccessKey\": \"your AWS secret access key\",\n  \"SessionToken\": \"the AWS session token for temporary credentials\", \n  \"Expiration\": \"ISO8601 timestamp when the credentials expire\"\n}  \n</code></pre> <p>The Expiration field allows the generated credentials to be cached and reused until they are no more valid (by default the value is 3600s=1h).</p>"},{"location":"security/credential-process/#advantages","title":"Advantages","text":"<ul> <li>Ensures that no credential set is written on your machine in neither the ~/.aws/credentials or ~/.aws/config files.</li> <li>Ensures your long-running tasks always have valid credentials during their lifecycle.</li> <li>Is compatible with named-profiles.</li> <li>Is a way to make third-party tool compatible with AWS SSO and SAML Federated IAM Principals even if they don't support them natively.</li> <li>As stated by this article by Ben Kehoe, Credential Process is a good way to avoid cluttering the credential file with temporary credentials.</li> </ul> <p>Warning</p> <p>Temporary credentials in the credentials file reduce potential blast radius in case of machine exploit but they require to be refreshed every time they expire.</p>"},{"location":"security/credential-process/#how-leapp-works-with-credential-process","title":"How Leapp works with Credential Process","text":"<p>Info</p> <p>Requirements: this credentials generation method requires that both Leapp desktop app and CLI are installed.</p> <p>1) Open your Leapp desktop app and go to the settings panel ().</p> <p>2) In the general section change the AWS Credential Generation from \"credential-file-method\" to \"credential-process-method\".</p> <p>3) An informative panel will show up telling that you need the CLI installed (see below), click on \"I acknowledge it\"</p> warning modal <p>4) Now, everytime you click on start () an entry will be created in the ~/.aws/config file with the following format:</p> <pre><code>[profile PROFILE_NAME]\ncredential_process=leapp session generate SESSION_ID\nregion=REGION\n</code></pre> <p>5) You can start more than one session, depending on how many named-profile you've created;  for every session started with a unique named-profile, a new entry will be created in the config file.</p> <p>Info</p> <p>AWS CLI, SDks, and third-party tools that can read credentials from the config file can reach AWS services with this method.</p>"},{"location":"security/intro/","title":"Intro","text":"<p>Leapp is built with a security-first approach. Every piece of information that has to be persisted is encrypted and saved on your workstation.</p> <p>We devised two main methods to store data, based on its sensitiveness.</p> Data Persistence and encryption Examples Operational All information used to make Leapp work, not strictly tied to direct access to cloud environments. Stored and encrypted in a configuration file within the user workspace. Named profiles, proxy configurations, etc. Sensitive Information that can be used, or potentially exploited, to gain access to cloud environments. Stored in the System Vault, leveraging its own integrated encryption. Static credentials, access tokens, cached data, etc."},{"location":"security/intro/#end-to-end-encryption","title":"End-to-end Encryption","text":"<p>We leverage Zero-Knowledge to provide end-to-end encryption on tiers that require to save your data outside of your workstation to deliver specific features.</p> <p>Zero Knowledge is designed so that no one, except you, can access your secured data.</p> <p>Warning</p> <p>We CAN'T access your data under any circumstances, even if you ask us to!</p>"},{"location":"security/system-vault/","title":"System Vault","text":"<p>Information that can be used, or potentially exploited, to gain access to cloud environments are stored your workstation's System Vault, leveraging its own integrated encryption. The user can access the secrets stored in the System Vault at any time, using their user password.</p> <p>Leapp uses Keytar as an interface to the secure vault on macOS, Windows and Linux systems.</p> <p>Every key is stored in the vault under the name Leapp. In the description, you will find the underlying name used by Leapp to retrieve the secret.</p>"},{"location":"security/system-vault/#supported-system-vaults","title":"Supported System Vaults","text":"OS System Vault MacOS Keychain Windows Credential Vault Linux API/Libsecret <p>Info</p> <p>We're currently supporting only System Vaults installed by default on the OS. We're planning on extending support to other vaults and online password managers (LastPass, BitWarden, 1Password, etc.).  If you'd like other services to be supported feel free to open an Issue or make a Pull Request (check our contributing guidelines). </p>"},{"location":"security/zero-knowledge/","title":"Zero Knowledge","text":"<p>To persist your configuration online, we implemented Zero-Knowledge encryption to prevent access to your information. But how can you trust a company to keep all of your secrets secret? The answer lies in end-to-end encryption, which lays the groundwork for applications with Zero-Knowledge architectures.</p> <p>Zero-knowledge refers to policies and architecture that eliminate the possibility for secret managers themselves to access your password.</p> <p>Warning</p> <p>This is implemented to save your configuration online in the PRO and TEAM versions of Leapp. Don't know yet about the PRO and TEAM versions? Check our roadmap.</p> <p>Info</p> <p>This same process is leveraged by Bitwarden to store their password. </p>"},{"location":"security/zero-knowledge/#users-have-key-control","title":"Users have key control","text":"<p>When users have complete control of the encryption key, they control access to the data, providing encrypted information to Leapp without Leapp having access to or knowledge of that data.</p> <p>Info</p> <p>To know more about this, you can find the whitepaper on which we based our implementation of Zero-Knowledge end-to-end encryption.</p>"},{"location":"security/zero-knowledge/#criteria","title":"Criteria","text":"<ul> <li>During any phase of the registration and login process the client does not provide any password-related info to the server.</li> <li>The server does not store any information that can be used to guess the password in a convenient way. In other words, the system must not be prone to brute force or dictionary attacks.</li> <li>Any sensible data is encrypted client-side, the server will work with encrypted blocks only.</li> <li>All the implementation is released as open-source.</li> </ul>"},{"location":"security/zero-knowledge/#technologies","title":"Technologies","text":"<ul> <li>PBKDF2 for client hashing.</li> <li>AES 256 for symmetric cypher.</li> <li>RSA with 4096-bit keys for asymmetric cypher.</li> <li>BCrypt for server hashing.</li> </ul>"},{"location":"security/credentials-generation/aws/","title":"Credential file","text":"<p>Leapp manages 4 types of AWS access methods:</p> <ol> <li>IAM Federated Role</li> <li>IAM User</li> <li>IAM Single Sign-On</li> <li>IAM Role chained</li> </ol> <p>For each access method, Leapp generates a set of <code>temporary credentials</code> through STS and a rotation logic is triggered every 20 minutes.</p> <p>Temporary credentials ensures that no long-term credentials are written in the AWS credentials file located in <code>~/.aws/credentials</code>.</p> <p>Leapp manages information entered by the user using the following logic for each access method.</p>"},{"location":"security/credentials-generation/aws/#iam-federated-role","title":"IAM Federated Role","text":""},{"location":"security/credentials-generation/aws/#assumerolewithsaml","title":"assumeRoleWithSAML","text":"<p>Temporary security credentials created by AssumeRoleWithSAMLResponse last for one hour.  However, you can use the optional DurationSeconds parameter to specify the duration of your session. </p> <p>Your role session lasts for the specified duration, or until the time specified in the SAML authentication response's SessionNotOnOrAfter value, whichever is shorter. You can provide a DurationSeconds value from 900 seconds (15 minutes) up to the maximum session duration setting for the role. This setting can have a value from 1 hour to 12 hours.</p> <p>Leapp sets the token duration to 1 hour.</p> <p>Info</p> <p>\u26a0\ufe0f In this case, generated credentials are not \"cached\" in the keychain.</p>"},{"location":"security/credentials-generation/aws/#iam-chained-role","title":"IAM Chained Role","text":"<p>An IAM Chained Role is used to access another AWS account services through a main session with a trust relationship.</p> <p>How to use AWS Javascript SDK to Assume a Role</p> <p>How to generate temporary credentials on AWS</p> <p>If you do not pass the DurationSeconds parameter (as in the case of Leapp), the temporary credentials expire in 1 hour.</p>"},{"location":"security/credentials-generation/aws/#iam-user","title":"IAM User","text":"<p>The GetSessionToken operation must be called by using the long-term AWS security credentials of the AWS IAM user. Credentials that are created by IAM users are valid for the duration that you specify. This duration can range from 900 seconds (15 minutes) up to a maximum of 129,600 seconds (36 hours), with a default of 43,200 seconds (12 hours). Credentials based on account credentials can range from 900 seconds (15 minutes) up to 3,600 seconds (1 hour), with a default of 1 hour.</p> <p>Leapp sets the token duration to 10 hours.</p> <p>Info</p> <p>These are the only temporary credentials that are stored in the System vault and not rotated, unless expired.</p>"},{"location":"security/credentials-generation/aws/#aws-sso-role","title":"AWS SSO Role","text":"<p>How to generate SSO temporary credentials</p> <p>Info</p> <p>The access token is valid for 8 hours as noted in the expiresAt timestamp in the JSON file. Expired tokens must be re-authenticated using the get-role-credentials API call.</p> <p>Token duration is fixed to 8 hours.</p>"},{"location":"security/credentials-generation/azure/","title":"Azure","text":""},{"location":"security/credentials-generation/azure/#azure-credentials-generation","title":"Azure credentials generation","text":"<p>Azure generates a set of access and refresh tokens that are put inside the msal_token_cache.json file inside the .azure directory.  Following is the procedure used to generate a set of credentials.</p> <p>Info</p> <p>In Windows OS the msal_token_cache is persisted on an encrypted file with dpapi API. Starting from release 2.30 of Azure CLI, credentials are no more persisted in the original accessToken.json</p> <p>Azure Users profile info is saved in the azureProfile.json file inside the .azure directory.</p>"},{"location":"security/credentials-generation/azure/#access-strategy-login-integration","title":"Access strategy - login integration","text":"<p>Before accessing Azure sessions, you now have to create an Azure integration. After that, these are the steps required to log in and then retrieve Azure sessions.</p> <ol> <li>msal_token_cache and azureProfile.json files are cleaned for security reasons.</li> <li>We execute <code>az login --tenantId &lt;TENANTID&gt;</code>. We do this to obtain the updated user profile and the refresh token (associated to this integration).</li> <li>We extract all the Azure subscriptions associated with the integration and for each one we map a Leapp Azure session.</li> <li>We extract the refresh token, account, and profile information from msal_token_cache and azureProfile.json and persist them in the System's vault.</li> <li>We also remove the previous information from the original files, to increase security and avoid external tampering.</li> </ol>"},{"location":"security/credentials-generation/azure/#access-strategy-start-session","title":"Access strategy - start session","text":"<p>Info</p> <p>In the current version of Leapp we can only start one Azure session at a time.</p> <p>For each subscription retrieved upon login to a specific integration, we define a new Leapp Azure Session. To start an Azure session we follow these steps.</p> <ol> <li>Recover refresh token, account, and profile information from the Vault and we use them alongside sessionId (Subscription id) in the start operation.</li> <li>azureProfile.json is only filled with profile information from the current subscription.</li> <li>We write the account information and the refresh token back in the msal_token_cache</li> <li>We execute <code>az account get-access-token --subscriptionId &lt;SUBSCRIPTIONID&gt;</code>, to retrieve the access token and the id token of the subscription.</li> <li>The previous command also writes access and id token back to the msal_token_cache file.</li> <li>We update the expiration time of the session to the current datetime.</li> <li>We update the refresh token in the Vault with the new information.</li> <li>We remove the refresh token from the msal_token_cache.</li> <li>We finally start the session.</li> </ol> <p>Info</p> <ul> <li>The refresh token is a long term credential that potentially lasts for 90 days. The access token is a short term credential and lasts for 70 minutes. Source</li> </ul>"},{"location":"security/credentials-generation/azure/#access-strategy-rotate-session","title":"Access strategy - rotate session","text":"<p>To rotate the session's credentials we do the following steps:</p> <ol> <li>We obtain the expiration time from the session we are rotating.</li> <li>We check with the current date to see if the session validity will expire in the next 20 minutes.</li> <li>If no, no other checks are necessary you can still use the current credentials.</li> <li> <p>If yes, we do the following operations:</p> <ul> <li>Remove access token from msal_token_cache.</li> <li>Recover refresh token from System's Vault.</li> <li>Insert the refresh token back into the msal_token_cache file.</li> <li>We redo the last 4 steps (6-9) from the start operation.</li> </ul> </li> </ol>"},{"location":"security/credentials-generation/azure/#access-strategy-stop-session","title":"Access strategy - stop session","text":"<p>To stop the session (because we only have one active at a time) we do the following steps:</p> <ol> <li>We run <code>az logout</code>, and we set session's status to INACTIVE. This operation cleans both msal_token_cache and azureProfile.json files.</li> </ol> <p>Info</p> <p>Leapp enhances security by forcingly refresh access token every 20 minutes and by removing refresh token from the msal_token_cache.</p>"},{"location":"troubleshooting/app-data/","title":"Application Data","text":""},{"location":"troubleshooting/app-data/#default-leapp-directories","title":"Default Leapp directories","text":"<p>Here the user can find all the directories that Leapp uses directly or indirectly.</p>"},{"location":"troubleshooting/app-data/#installation-path","title":"Installation path","text":"<p>By default, Leapp is installed in the following locations:</p> MacOSLinuxWindows <pre><code>/Applications\n</code></pre> <pre><code>/opt/Leapp\n</code></pre> <pre><code>C:\\Users\\&lt;USER&gt;\\AppData\\Local\\Programs\\Leapp\n</code></pre>"},{"location":"troubleshooting/app-data/#configuration-files","title":"Configuration files","text":"<p>By default, Leapp stores the configuration files in the following locations:</p> MacOSLinuxWindows <pre><code>~/.Leapp\n</code></pre> <pre><code>~/.Leapp\n</code></pre> <pre><code>C:\\Users\\&lt;USER&gt;\\.Leapp\n</code></pre> <p>Info</p> <ul> <li>Leapp-lock.json stores the Leapp configuration and is encrypted.<ul> <li>On startup, if Leapp-lock.json is not found, Leapp will create an empty version of it.</li> </ul> </li> <li>Leapp-lock.backup.bin stores a backup of Leapp-lock.json and is updated on startup if Leapp-lock.json is considered valid.<ul> <li>On startup, if Leapp-lock.json is corrupted, Leapp-lock.backup.bin will be used to restore it.</li> <li>If both files are corrupted, a new empty configuration will be created.</li> </ul> </li> <li>.latest contains the latest version number of Leapp. If missing, it will be created again on startup.</li> </ul>"},{"location":"troubleshooting/app-data/#credentials-file","title":"Credentials file","text":"<p>By default, Leapp writes the credentials file in the following locations:</p> MacOSLinuxWindows <pre><code>~/.aws\n</code></pre> <pre><code>~/.aws\n</code></pre> <pre><code>C:\\Users\\&lt;USER&gt;\\.aws\n</code></pre>"},{"location":"troubleshooting/app-data/#logs-file","title":"Logs file","text":"<p>By default, Leapp writes logs to the following locations:</p> MacOSLinuxWindows <pre><code>~/Library/Logs/Leapp/log.electronService.log\n</code></pre> <pre><code>~/.config/Leapp/logs/log.electronService.log\n</code></pre> <pre><code>C:\\Users\\&lt;USER&gt;\\AppData\\Roaming\\Leapp\\log.electronService.log\n</code></pre> <p>Info</p> <p>Logs are structured in the following way:</p> <pre><code>[YYYY-MM-DD HH:mm:ss.mmm] [LEVEL] [rendered/system] [COMPONENT] MESSAGE {Useful Object / Stacktrace Err Object}\n</code></pre> <p>Warning</p> <p>Please always add logs to any issue you want to fill whenever possible, so you can help the team identify  the problem quickly</p>"},{"location":"troubleshooting/faq/","title":"FAQ","text":""},{"location":"troubleshooting/faq/#im-using-the-open-source-app-do-you-store-my-data-online","title":"I'm using the open-source app, do you store my data online?","text":"<p>NO.</p> <p>The open-source software doesn't transfer, persist, or share anything with other services. All your data is secured and encrypted on your workstation.</p> <p>Nobody can access it, not even ourselves.</p>"},{"location":"troubleshooting/faq/#ive-got-a-paid-tier-how-do-you-manage-my-data-can-you-access-it","title":"I've got a paid tier, how do you manage my data? Can you access it?","text":"<p>We can't and don't want to see any of your access data.</p> <p>We need to store your data online to enable some features (syncing, managing other users, etc.) but we implement a Zero-Knowledge encryption system that prevents even ourselves to access your data.</p>"},{"location":"troubleshooting/faq/#i-dont-feel-secure-using-a-built-in-window-for-authentication-cant-you-use-the-default-browser","title":"I don't feel secure using a built-in window for authentication, can't you use the default browser?","text":"<p>In the future, Leapp will only use the default browser to authenticate. Right now, this is a compromise to deliver the authentication flow. We already ported the AWS SSO authentication flow on the default browser, and we're working on migrating the other ones as soon as possible.</p>"},{"location":"troubleshooting/faq/#how-can-i-find-leapp-data-in-the-system-vault","title":"How can I find Leapp data in the System Vault?","text":"<p>Every key stored by Leapp in the vault is named Leapp. The account name shows the description of the element saved by our software.</p>"},{"location":"troubleshooting/faq/#where-do-i-find-the-leapp-logs","title":"Where do I find the Leapp logs?","text":"<p>Head to the Application data section.</p>"},{"location":"troubleshooting/faq/#ssm-terminal-is-opening-but-no-session-is-starting-what-can-i-do","title":"SSM terminal is opening but no session is starting, what can I do?","text":"<p>Just close the terminal and relaunch the SSM command.</p>"},{"location":"troubleshooting/faq/#aws-cli-or-az-cli-is-installed-but-leapp-cant-find-it-what-can-i-do","title":"AWS CLI (or AZ CLI) is installed but Leapp can't find it, what can I do?","text":"<p>Leapp on macOS works in sandbox mode, so some terminal commands must be symlinked in order to work on some installations. Just make a symlink pointing from <code>/usr/local/bin/aws</code> to the actual <code>aws</code> binary or, for AZ CLI, from <code>/usr/local/bin/az</code> to the actual <code>az</code> binary. To create symlinks on macOS, use this command <code>ln -s /any/file/on/the/disk linked-file</code>. The command is called ln. If used with the  option -s it will create a symbolic link in the current directory.</p> <p>Examples: </p><pre><code>ln -s /path/to/my/aws /usr/local/bin/aws\nln -s /path/to/my/az /usr/local/bin/az\n</code></pre>"},{"location":"troubleshooting/faq/#i-use-leapp-session-current-but-want-to-see-the-alias-and-not-the-id","title":"I use leapp session current but want to see the alias and not the id.","text":""},{"location":"troubleshooting/faq/#setting-up-leappalias-command","title":"Setting up leappalias command","text":"<p>Follow these steps to set up the <code>leappalias</code> command in your Zsh shell:</p> <ul> <li>Create a script file named <code>leappalias.sh</code> using a text editor:</li> </ul> <pre><code>#!/bin/bash\nleapp session current | grep -o \"\\\"alias\\\":\\\"[^\\\"]*\" | cut -d '\"' -f 4\n</code></pre> <ul> <li>Save the file and make it executable by running the following command in the terminal:</li> </ul> <pre><code>chmod +x leappalias.sh\n</code></pre> <ul> <li>Move the script to a directory in your system's PATH. For example, <code>/usr/local/bin/</code>:</li> </ul> <pre><code>sudo mv leappalias.sh /usr/local/bin/leappalias\n</code></pre> <ul> <li>Open your <code>zshrc</code> file using a text editor:</li> </ul> <pre><code>nano ~/.zshrc\n</code></pre> <ul> <li>Define an alias for executing the script by adding the following line to the <code>zshrc</code> file:</li> </ul> <pre><code>alias leappalias='/usr/local/bin/leappalias'\n</code></pre> <ul> <li> <p>Save the changes and close the <code>zshrc</code> file.</p> </li> <li> <p>Reload the <code>zshrc</code> file in the terminal using the following command:</p> </li> </ul> <pre><code>source ~/.zshrc\n</code></pre> <p>Once you have completed these steps, you can use the <code>leappalias</code> command in your terminal to extract and display the alias from the output of <code>leapp session current</code>. Credit goes to bspansinQdo.</p>"},{"location":"troubleshooting/faq/#how-can-i-add-support-to-a-new-saml-20-identity-provider","title":"How can I add support to a new SAML 2.0 Identity Provider?","text":"<p>To add support to a new SAML 2.0 Identity Provider, you have to perform the following steps:</p> <ul> <li>create a Fork of the Noovolari/leapp GitHub repository;</li> <li>create a Pull Request and set up your local environment following Install dependencies and build packages section of the DEVELOPMENT.md;</li> <li>add the Identity Provider-specific authentication URL RegEx filter to the Leapp Core authenticationUrlRegexes Map;</li> <li>follow the last part of the Install dependencies and build packages section of the DEVELOPMENT.md to build the solution for both the CLI and the Desktop App;</li> <li>push your changes to your forked repository and propose to merge them to the main repository. </li> </ul> <p>If you need more details about the implementation, please check the How to add a new SAML IdP preset authentication URL section of the DEVELOPMENT.md.</p>"},{"location":"usefull-scripts/export-profile/","title":"AWS Profile Selector: Simplifying AWS Profile Selection with the Leapp CLI","text":""},{"location":"usefull-scripts/export-profile/#aws-profile-selector-simplifying-aws-profile-selection-with-the-leapp-cli","title":"AWS Profile Selector: Simplifying AWS Profile Selection with the Leapp CLI","text":"<p>This script enhances the AWS profile selection process by utilizing the Leapp CLI. It provides a streamlined way to switch between AWS profiles in the command line environment, allowing for easy management of multiple AWS configurations.</p> <pre><code>function select_and_export_aws_profile() {\n    local selected_profile\n    selected_profile=$(leapp session list | \\\n        grep -w 'active' | \\\n        awk '{print $(NF-2)}' | \\\n        fzf --height 30% -1 -0 --header 'Select AWS profile')\n    if [[ -n \"$selected_profile\" ]]; then\n        export AWS_PROFILE=\"$selected_profile\"\n        echo \"AWS_PROFILE=$AWS_PROFILE\"\n    fi\n}\n\nalias awsp=select_and_export_aws_profile\n</code></pre> <p>To use the script, it's important to note that you need to have Leapp installed and running. Leapp is a command-line tool for managing AWS profiles and sessions. Before executing the script, ensure that Leapp is installed on your system and at least one AWS session is active.</p> <p>Leapp keeps track of your AWS sessions and allows you to switch between different profiles seamlessly. It's a valuable tool for managing multiple AWS accounts and simplifying your workflow. Once Leapp is installed and running, the script utilizes its functionality to retrieve the list of active sessions and display them for selection.</p> <p>By integrating '<code>fzf</code>' with Leapp, the script provides an interactive and convenient way to choose the desired AWS profile. With a few keystrokes, you can quickly switch between AWS profiles without manually setting the environment variables each time.</p> <p>Remember to save the script in your shell configuration file (<code>.bashrc</code> or <code>.zshrc</code>) and restart your terminal or reload the configuration file for the changes to take effect.</p> <p>In summary, this script simplifies the process of selecting and exporting an AWS profile, making it easier to switch between different AWS configurations when using the command line.</p>"}]}