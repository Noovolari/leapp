{
  "name": "Leapp",
  "version": "0.4.0",
  "author": {
    "name": "besharp",
    "email": "info@besharp.it"
  },
  "description": "Straight programmatic access via Single Sign-on to all your AWS accounts and resources.",
  "contributors": [
    {
      "name": "Alessandro Gaggia",
      "email": "alex@besharp.it"
    },
    {
      "name": "Paolo Diciaula",
      "email": "paolo.diciaula@besharp.it"
    },
    {
      "name": "Eric Villa",
      "email": "eric@noovolari.com"
    },
    {
      "name": "Andrea Cavagna",
      "email": "andrea.cavagna@noovolari.com"
    },
    {
      "name": "Nicol√≤ Marchesi",
      "email": "nicolo@noovolari.com"
    }
  ],
  "repository": "https://github.com/Noovolari/leapp",
  "private": true,
  "category": "public.app-category.developer-tools",
  "homepage": "https://leapp.cloud",
  "main": "electron/dist/electron/main.js",
  "scripts": {
    "postinstall": "electron-builder install-app-deps",
    "ng": "ng",
    "start": "ng serve",
    "rebuild-keytar": "electron-rebuild -f -w keytar",
    "build": "rm -rf electron/dist && mkdir -p dist/leapp-client && cp src/assets/icons/* dist/leapp-client/ && ng build --base-href ./",
    "test": "ng test",
    "lint": "ng lint",
    "extract": "ngx-translate-extract --input ./src --output ./src/assets/i18n/en.json ./src/assets/i18n/it.json --clean --sort --format namespaced-json --marker _",
    "electron-dev": "rm -rf electron/dist && rm -rf dist && mkdir -p dist/leapp-client && cp -a src/assets/icons/* dist/leapp-client/ && ng build --aot --base-href ./ && tsc --p electron && mkdir -p electron/dist/electron/assets/images && cp -a electron/assets/images/* electron/dist/electron/assets/images/ && electron --enable-accelerated-mjpeg-decode --enable-accelerated-video --ignore-gpu-blacklist --enable-native-gpu-memory-buffers --enable-gpu-rasterization --ignore-gpu-blacklist .",
    "electron-stag": "rm -rf electron/dist && rm -rf dist && mkdir -p dist/leapp-client && cp -a src/assets/icons/* dist/leapp-client/ && ng build --configuration staging --base-href ./ && tsc --p electron && mkdir -p electron/dist/electron/assets/images && cp -a electron/assets/images/* electron/dist/electron/assets/images/ && electron .",
    "electron-prod": "rm -rf electron/dist && rm -rf dist && mkdir -p dist/leapp-client && cp -a src/assets/icons/* dist/leapp-client/ && ng build --configuration production --base-href ./ && tsc --p electron && mkdir -p electron/dist/electron/assets/images && cp -a electron/assets/images/* electron/dist/electron/assets/images/ && electron .",
    "electron-win": "DEL /Q electron\\dist && ng build --base-href ./ && tsc --p electron && electron .",
    "e2e": "ng e2e",
    "pack": "electron-builder --dir",
    "dist-mac-dev": "rm -rf electron/dist && rm -rf release && rm -rf dist && tsc --p electron && ng build --aot --base-href ./ && mkdir -p electron/dist/electron/assets/images && cp -a electron/assets/images/* electron/dist/electron/assets/images/ && electron-builder build",
    "dist-mac-stag": "rm -rf electron/dist && rm -rf release && rm -rf dist && tsc --p electron && ng build --aot --configuration staging --base-href ./ && mkdir -p electron/dist/electron/assets/images && cp -a electron/assets/images/* electron/dist/electron/assets/images/ && electron-builder build",
    "dist-mac-prod": "rm -rf electron/dist && rm -rf release && rm -rf dist && tsc --p electron && ng build --aot --configuration production --base-href ./ && mkdir -p electron/dist/electron/assets/images && cp -a electron/assets/images/* electron/dist/electron/assets/images/ && electron-builder build",
    "dist-deb-dev": "rm -rf electron/dist && rm -rf release && rm -rf dist && tsc --p electron && ng build --aot --base-href ./ && mkdir -p electron/dist/electron/assets/images && cp -a electron/assets/images/* electron/dist/electron/assets/images/ && electron-builder build --linux",
    "dist-deb-stag": "rm -rf electron/dist && rm -rf release && rm -rf dist && tsc --p electron && ng build --aot --configuration staging --base-href ./ && mkdir -p electron/dist/electron/assets/images && cp -a electron/assets/images/* electron/dist/electron/assets/images/ && electron-builder build --linux",
    "dist-deb-prod": "rm -rf electron/dist && rm -rf release && rm -rf dist && tsc --p electron && ng build --aot --configuration production --base-href ./ && mkdir -p electron/dist/electron/assets/images && cp -a electron/assets/images/* electron/dist/electron/assets/images/ && electron-builder build --linux",
    "dist-win-dev": "rm -rf electron/dist && rm -rf release && rm -rf dist && tsc --p electron && ng build --aot --base-href ./ && mkdir -p electron/dist/electron/assets/images && cp -a electron/assets/images/* electron/dist/electron/assets/images/ && electron-builder build --win --x64",
    "dist-win-stag": "rm -rf electron/dist && rm -rf release && rm -rf dist && tsc --p electron && ng build --aot --configuration staging --base-href ./ && mkdir -p electron/dist/electron/assets/images && cp -a electron/assets/images/* electron/dist/electron/assets/images/ && electron-builder build --win --x64",
    "dist-win-prod": "rm -rf electron/dist && rm -rf release && rm -rf dist && tsc --p electron && ng build --aot --configuration production --base-href ./ && mkdir -p electron/dist/electron/assets/images && cp -a electron/assets/images/* electron/dist/electron/assets/images/ && electron-builder build --win --x64",
    "dist-all-dev": "rm -rf electron/dist && rm -rf release && rm -rf dist && tsc --p electron && ng build --aot --base-href ./ && mkdir -p electron/dist/electron/assets/images && cp -a electron/assets/images/* electron/dist/electron/assets/images/ && electron-builder build --mac --win --linux",
    "dist-all-stag": "rm -rf electron/dist && rm -rf release && rm -rf dist && tsc --p electron && ng build --aot --configuration staging --base-href ./ && mkdir -p electron/dist/electron/assets/images && cp -a electron/assets/images/* electron/dist/electron/assets/images/ && electron-builder build --mac --win --linux",
    "dist-all-prod": "rm -rf electron/dist && rm -rf release && rm -rf dist && tsc --p electron && ng build --aot --configuration production --base-href ./ && mkdir -p electron/dist/electron/assets/images && cp -a electron/assets/images/* electron/dist/electron/assets/images/ && electron-builder build --mac --win --linux"
  },
  "build": {
    "publish": [
      {
        "provider": "github",
        "owner": "Noovolari",
        "repo": "leapp",
        "releaseType": "release"
      }
    ],
    "afterSign": "scripts/notarize.js",
    "productName": "Leapp",
    "icon": "src/assets/icons/icon.icns",
    "files": [
      "dist/leapp-client/*",
      "dist/leapp-client/**/*",
      "node_modules/**/*",
      "package.json",
      "electron/dist/*",
      "electron/dist/**/*",
      "dist/icon.icns",
      "dist/icon.ico",
      "dist/icon.png",
      "dist/assets/images/Leapp.icns",
      "dist/assets/images/Leapp.ico",
      "dist/assets/images/Leapp.png"
    ],
    "directories": {
      "output": "release",
      "buildResources": "dist"
    },
    "appId": "com.leapp.app",
    "dmg": {
      "icon": "src/assets/icons/icon.icns",
      "background": "src/assets/icons/background.png",
      "contents": [
        {
          "x": 110,
          "y": 150
        },
        {
          "x": 240,
          "y": 150,
          "type": "link",
          "path": "/Applications"
        }
      ]
    },
    "linux": {
      "category": "Utility",
      "synopsis": "Leapp Client is a tool that allows the user to obtain secure, temporary and refreshable credentials to access AWS Services with AWS CLI and tools based on it",
      "description": "Leapp Client is a tool that allows the user to obtain secure, temporary and refreshable credentials to access AWS Services with AWS CLI and tools based on it, with versioning tools that work with AWS CodeCommit service and to easily use AWS SDK from your local environment during your everyday development.",
      "icon": "src/assets/icons/1024x1024.png",
      "desktop": {
        "Icon": "/usr/share/icons/hicolor/0x0/apps/leapp.png"
      },
      "target": [
        "deb",
        "AppImage"
      ]
    },
    "win": {
      "target": [
        "nsis"
      ],
      "icon": "src/assets/images/Leapp.ico",
      "legalTrademarks": "beSharp",
      "publisherName": "beSharp",
      "requestedExecutionLevel": "highestAvailable",
      "verifyUpdateCodeSignature": false,
      "certificateFile": "windows_sign_certificate.pfx"
    },
    "mac": {
      "icon": "src/assets/images/Leapp.icns",
      "forceCodeSigning": true,
      "hardenedRuntime": true,
      "entitlements": "./build/entitlements.mac.plist",
      "entitlementsInherit": "./build/entitlements.mac.plist",
      "gatekeeperAssess": false,
      "target": [
        "dmg",
        "zip"
      ]
    }
  },
  "dependencies": {
    "@angular/animations": "~8.1.0",
    "@angular/common": "~8.1.0",
    "@angular/compiler": "~8.1.0",
    "@angular/core": "~8.1.0",
    "@angular/forms": "~8.1.0",
    "@angular/platform-browser": "~8.1.0",
    "@angular/platform-browser-dynamic": "~8.1.0",
    "@angular/router": "~8.1.0",
    "@ng-select/ng-select": "~3.7.3",
    "@ngx-translate/core": "~11.0.1",
    "@ngx-translate/http-loader": "~4.0.0",
    "@sebgroup/ng-magic-iframe": "~1.0.2",
    "@types/jest": "~25.2.3",
    "aws-sdk": "~2.784.0",
    "bootstrap": "~4.5.0",
    "chdir": "0.0.0",
    "copy-dir": "~1.3.0",
    "crypto-js": "~3.3.0",
    "electron-default-menu": "~1.0.2",
    "electron-is-dev": "^0.3.0",
    "electron-log": "~3.0.6",
    "electron-notarize": "~0.1.1",
    "electron-osx-sign": "~0.4.17",
    "electron-reload": "~1.5.0",
    "electron-updater": "^4.3.5",
    "extract-zip": "~1.7.0",
    "fix-path": "~3.0.0",
    "follow-redirects": "1.13.0",
    "fs-extra": "~8.1.0",
    "github-url-to-object": "^4.0.4",
    "global-tunnel": "~1.2.0",
    "http-proxy-agent": "2.1.0",
    "https-proxy-agent": "2.2.4",
    "ini": "~1.3.5",
    "is-url": "^1.2.4",
    "jwt-decode": "~2.2.0",
    "keytar": "~6.0.1",
    "md5-file": "~4.0.0",
    "menubar": "~6.0.3",
    "mousetrap": "~1.6.5",
    "ms": "^2.1.1",
    "ngx-bootstrap": "4.3.0",
    "ngx-json-viewer": "~2.4.0",
    "ngx-toastr": "~10.0.4",
    "node-log-rotate": "~0.1.5",
    "node-machine-id": "~1.1.12",
    "rimraf": "~3.0.2",
    "rxjs": "~6.4.0",
    "saml-encoder-decoder-js": "~1.0.1",
    "semver": "~6.3.0",
    "sudo-prompt": "~9.2.1",
    "tslib": "~1.13.0",
    "update-electron-app": "~2.0.1",
    "uuid": "~8.3.0",
    "v8-compile-cache": "~2.1.1",
    "zlib": "~1.0.5",
    "zone.js": "~0.9.1"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "~0.803.24",
    "@angular/cli": "~8.1.0",
    "@angular/compiler-cli": "~8.1.0",
    "@angular/language-service": "~8.1.0",
    "@biesbjerg/ngx-translate-extract": "~2.3.4",
    "@types/aws-sdk": "^2.7.0",
    "@types/jasmine": "~3.5.11",
    "@types/jasminewd2": "~2.0.3",
    "@types/node": "~10.17.27",
    "codelyzer": "~5.2.2",
    "electron": "~8.5.2",
    "electron-builder": "~22.7.0",
    "electron-builder-squirrel-windows": "~21.1.3",
    "electron-installer-dmg": "~3.0.0",
    "electron-packager": "~14.2.1",
    "electron-rebuild": "~2.0.3",
    "jasmine-core": "~3.4.0",
    "jasmine-spec-reporter": "~4.2.1",
    "karma": "~4.4.1",
    "karma-chrome-launcher": "~2.2.0",
    "karma-coverage-istanbul-reporter": "~2.0.1",
    "karma-jasmine": "~2.0.1",
    "karma-jasmine-html-reporter": "~1.5.4",
    "protractor": "~5.4.4",
    "ts-node": "~7.0.0",
    "tslint": "~5.15.0",
    "typescript": "~3.4.3"
  }
}
